<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20222.22.0916.1526                               -->
<workbook original-version='18.1' source-build='2022.2.2 (20222.22.0916.1526)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <_.fcp.AccessibleZoneTabOrder.true...AccessibleZoneTabOrder />
    <_.fcp.AnimationOnByDefault.true...AnimationOnByDefault />
    <AutoCreateAndUpdateDSDPhoneLayouts />
    <IntuitiveSorting />
    <IntuitiveSorting_SP2 />
    <MapboxVectorStylesAndLayers />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <SetMembershipControl />
    <SheetIdentifierTracking />
    <WindowsPersistSimpleIdentifiers />
    <WorksheetBackgroundTransparency />
    <ZoneBackgroundTransparency />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <_.fcp.AnimationOnByDefault.false...style>
    <_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule element='animation'>
      <_.fcp.AnimationOnByDefault.false...format attr='animation-on' value='ao-on' />
    </_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule>
  </_.fcp.AnimationOnByDefault.false...style>
  <datasources>
    <datasource caption='SampleSuperstore' inline='true' name='federated.0vrwzww0gi9eod1fpuf6r0ebp8jv' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='SampleSuperstore' name='textscan.091s5y1010j78b10jcd491xzkcwv'>
            <connection class='textscan' directory='C:/Users/shubh/OneDrive/Desktop/Docs' filename='SampleSuperstore.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='textscan.091s5y1010j78b10jcd491xzkcwv' name='SampleSuperstore.csv' table='[SampleSuperstore#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_IN' separator=','>
            <column datatype='string' name='Ship Mode' ordinal='0' />
            <column datatype='string' name='Segment' ordinal='1' />
            <column datatype='string' name='Country' ordinal='2' />
            <column datatype='string' name='City' ordinal='3' />
            <column datatype='string' name='State' ordinal='4' />
            <column datatype='integer' name='Postal Code' ordinal='5' />
            <column datatype='string' name='Region' ordinal='6' />
            <column datatype='string' name='Category' ordinal='7' />
            <column datatype='string' name='Sub-Category' ordinal='8' />
            <column datatype='real' name='Sales' ordinal='9' />
            <column datatype='integer' name='Quantity' ordinal='10' />
            <column datatype='real' name='Discount' ordinal='11' />
            <column datatype='real' name='Profit' ordinal='12' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='textscan.091s5y1010j78b10jcd491xzkcwv' name='SampleSuperstore.csv' table='[SampleSuperstore#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_IN' separator=','>
            <column datatype='string' name='Ship Mode' ordinal='0' />
            <column datatype='string' name='Segment' ordinal='1' />
            <column datatype='string' name='Country' ordinal='2' />
            <column datatype='string' name='City' ordinal='3' />
            <column datatype='string' name='State' ordinal='4' />
            <column datatype='integer' name='Postal Code' ordinal='5' />
            <column datatype='string' name='Region' ordinal='6' />
            <column datatype='string' name='Category' ordinal='7' />
            <column datatype='string' name='Sub-Category' ordinal='8' />
            <column datatype='real' name='Sales' ordinal='9' />
            <column datatype='integer' name='Quantity' ordinal='10' />
            <column datatype='real' name='Discount' ordinal='11' />
            <column datatype='real' name='Profit' ordinal='12' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[SampleSuperstore.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_GB&quot;</attribute>
              <attribute datatype='string' name='currency'>&quot;â‚¹&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_IN&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Ship Mode</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Ship Mode]</local-name>
            <parent-name>[SampleSuperstore.csv]</parent-name>
            <remote-alias>Ship Mode</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[SampleSuperstore.csv_A00F5B43E26B4BE0A4CD2F7CD0768C40]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Segment</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Segment]</local-name>
            <parent-name>[SampleSuperstore.csv]</parent-name>
            <remote-alias>Segment</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[SampleSuperstore.csv_A00F5B43E26B4BE0A4CD2F7CD0768C40]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Country</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Country]</local-name>
            <parent-name>[SampleSuperstore.csv]</parent-name>
            <remote-alias>Country</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[SampleSuperstore.csv_A00F5B43E26B4BE0A4CD2F7CD0768C40]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>City</remote-name>
            <remote-type>129</remote-type>
            <local-name>[City]</local-name>
            <parent-name>[SampleSuperstore.csv]</parent-name>
            <remote-alias>City</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[SampleSuperstore.csv_A00F5B43E26B4BE0A4CD2F7CD0768C40]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>State</remote-name>
            <remote-type>129</remote-type>
            <local-name>[State]</local-name>
            <parent-name>[SampleSuperstore.csv]</parent-name>
            <remote-alias>State</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[SampleSuperstore.csv_A00F5B43E26B4BE0A4CD2F7CD0768C40]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Postal Code</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Postal Code]</local-name>
            <parent-name>[SampleSuperstore.csv]</parent-name>
            <remote-alias>Postal Code</remote-alias>
            <ordinal>5</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[SampleSuperstore.csv_A00F5B43E26B4BE0A4CD2F7CD0768C40]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Region</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Region]</local-name>
            <parent-name>[SampleSuperstore.csv]</parent-name>
            <remote-alias>Region</remote-alias>
            <ordinal>6</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[SampleSuperstore.csv_A00F5B43E26B4BE0A4CD2F7CD0768C40]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Category</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Category]</local-name>
            <parent-name>[SampleSuperstore.csv]</parent-name>
            <remote-alias>Category</remote-alias>
            <ordinal>7</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[SampleSuperstore.csv_A00F5B43E26B4BE0A4CD2F7CD0768C40]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Sub-Category</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Sub-Category]</local-name>
            <parent-name>[SampleSuperstore.csv]</parent-name>
            <remote-alias>Sub-Category</remote-alias>
            <ordinal>8</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[SampleSuperstore.csv_A00F5B43E26B4BE0A4CD2F7CD0768C40]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Sales</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Sales]</local-name>
            <parent-name>[SampleSuperstore.csv]</parent-name>
            <remote-alias>Sales</remote-alias>
            <ordinal>9</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[SampleSuperstore.csv_A00F5B43E26B4BE0A4CD2F7CD0768C40]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Quantity</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Quantity]</local-name>
            <parent-name>[SampleSuperstore.csv]</parent-name>
            <remote-alias>Quantity</remote-alias>
            <ordinal>10</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[SampleSuperstore.csv_A00F5B43E26B4BE0A4CD2F7CD0768C40]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Discount</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Discount]</local-name>
            <parent-name>[SampleSuperstore.csv]</parent-name>
            <remote-alias>Discount</remote-alias>
            <ordinal>11</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[SampleSuperstore.csv_A00F5B43E26B4BE0A4CD2F7CD0768C40]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Profit</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Profit]</local-name>
            <parent-name>[SampleSuperstore.csv]</parent-name>
            <remote-alias>Profit</remote-alias>
            <ordinal>12</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[SampleSuperstore.csv_A00F5B43E26B4BE0A4CD2F7CD0768C40]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='real' default-format='p0.00%' name='[Calculation1]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='SUM([Sales]) / TOTAL(SUM([Sales]))'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column datatype='string' name='[Category]' role='dimension' type='nominal' />
      <column datatype='string' name='[City]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
      <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column aggregation='Percentile' aggregation-param='50' datatype='real' name='[Discount]' role='measure' type='quantitative' visual-totals='Avg' />
      <column aggregation='Sum' datatype='integer' default-format='*00000' name='[Postal Code]' role='dimension' semantic-role='[ZipCode].[Name]' type='ordinal' />
      <column datatype='string' name='[Region]' role='dimension' type='nominal' />
      <column datatype='string' name='[Segment]' role='dimension' type='nominal' />
      <column datatype='string' name='[Ship Mode]' role='dimension' type='nominal' />
      <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <column datatype='string' name='[Sub-Category]' role='dimension' type='nominal' />
      <_.fcp.ObjectModelTableType.true...column caption='SampleSuperstore.csv' datatype='table' name='[__tableau_internal_object_id__].[SampleSuperstore.csv_A00F5B43E26B4BE0A4CD2F7CD0768C40]' role='measure' type='quantitative' />
      <column-instance column='[Category]' derivation='None' name='[none:Category:nk]' pivot='key' type='nominal' />
      <column-instance column='[City]' derivation='None' name='[none:City:nk]' pivot='key' type='nominal' />
      <column-instance column='[Region]' derivation='None' name='[none:Region:nk]' pivot='key' type='nominal' />
      <column-instance column='[Segment]' derivation='None' name='[none:Segment:nk]' pivot='key' type='nominal' />
      <column-instance column='[Ship Mode]' derivation='None' name='[none:Ship Mode:nk]' pivot='key' type='nominal' />
      <column-instance column='[State]' derivation='None' name='[none:State:nk]' pivot='key' type='nominal' />
      <column-instance column='[Sub-Category]' derivation='None' name='[none:Sub-Category:nk]' pivot='key' type='nominal' />
      <group caption='Action (Region)' hidden='true' name='[Action (Region)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Region]' />
        </groupfilter>
      </group>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:City:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Anaheim&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Baytown&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Broken Arrow&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Charlottesville&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Concord&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Denver&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Escondido&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Gastonia&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Haltom City&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Houston&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Knoxville&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Layton&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Macon&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Mesquite&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Mount Vernon&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;North Charleston&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Oxnard&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Plano&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Redmond&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Royal Oak&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Santa Ana&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Sunnyvale&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Tucson&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Wausau&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Yuma&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Abilene&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Aurora&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Bolingbrook&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Carrollton&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Clinton&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Danville&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Edmond&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Frankfort&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Green Bay&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Hickory&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Johnson City&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Lakewood&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Long Beach&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Medford&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Mobile&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;New Rochelle&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Ontario&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Pensacola&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Provo&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Rock Hill&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;San Antonio&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Southaven&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Thornton&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Waco&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Wilson&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Allen&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Baltimore&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Bozeman&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Champaign&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Colorado Springs&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Decatur&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Elkhart&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Fresno&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Gresham&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Holyoke&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Kenner&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Las Cruces&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Louisville&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Mentor&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Moorhead&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Niagara Falls&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Orlando&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Philadelphia&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Rancho Cucamonga&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Rome&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;San Gabriel&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Sterling Heights&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Toledo&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Waterbury&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Woonsocket&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Apple Valley&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Bellevue&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Buffalo Grove&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Cheyenne&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Coral Springs&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Dover&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Fairfield&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Glendale&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Harrisonburg&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Indianapolis&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;La Quinta&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Leominster&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Manhattan&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Milford&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Muskogee&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Oak Park&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Parker&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Pomona&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Renton&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Saint Louis&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Santa Maria&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Tampa&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Urbandale&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;West Palm Beach&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Ann Arbor&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Beaumont&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Broomfield&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Chattanooga&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Conroe&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Des Moines&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Eugene&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Georgetown&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Hamilton&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Huntington Beach&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;La Crosse&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;League City&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Madison&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Miami&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Murfreesboro&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;North Las Vegas&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Palatine&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Plantation&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Redondo Beach&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Sacramento&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Santa Barbara&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Superior&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Tulsa&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Waynesboro&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Allentown&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Bangor&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Brentwood&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Chandler&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Columbia&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Deer Park&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Elmhurst&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Frisco&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Grove City&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Homestead&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Kenosha&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Las Vegas&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Loveland&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Meriden&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Moreno Valley&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Noblesville&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Ormond Beach&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Phoenix&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Reading&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Roseville&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;San Jose&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Stockton&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Torrance&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Waterloo&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Yonkers&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Atlanta&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Boca Raton&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Carlsbad&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Clarksville&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Cuyahoga Falls&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Eau Claire&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Fort Lauderdale&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Grapevine&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Hesperia&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Jamestown&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Lakeland&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Littleton&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Marysville&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Missoula&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;New Brunswick&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Olympia&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Pearland&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Portland&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Rochester&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Salt Lake City&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Smyrna&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;The Colony&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Virginia Beach&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Wichita&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Akron&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Austin&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Bossier City&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Cary&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Clovis&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Daytona Beach&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Edmonds&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Franklin&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Greensboro&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Highland Park&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Jonesboro&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Lancaster&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Longview&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Medina&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Monroe&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;New York City&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Orange&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Peoria&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Pueblo&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Rockford&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;San Bernardino&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Sparks&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Thousand Oaks&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Warner Robins&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Woodbury&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Asheville&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Billings&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Cambridge&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Cincinnati&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Covington&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Durham&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Florence&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Grand Prairie&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Henderson&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Jackson&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Lake Elsinore&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Lindenhurst&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Marietta&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Mishawaka&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;New Albany&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Oklahoma City&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Passaic&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Port Saint Lucie&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Rio Rancho&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Salem&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Sioux Falls&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Texarkana&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Vancouver&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Wheeling&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Altoona&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Bartlett&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Bridgeton&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Chapel Hill&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Columbus&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Delray Beach&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Encinitas&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Gaithersburg&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Gulfport&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Hoover&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Kent&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Lawrence&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Lowell&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Meridian&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Morristown&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Norfolk&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Overland Park&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Pico Rivera&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Redding&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Roswell&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;San Mateo&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Suffolk&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Trenton&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Watertown&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;York&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Appleton&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Bellingham&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Bullhead City&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Chicago&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Corpus Christi&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Draper&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Fargo&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Glenview&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Hattiesburg&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Inglewood&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Lafayette&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Lewiston&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Manteca&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Milwaukee&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Naperville&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Oakland&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Parma&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Pompano Beach&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Revere&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Saint Paul&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Scottsdale&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Taylor&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Utica&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Westfield&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Arlington&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Bethlehem&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Burlington&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Chico&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Costa Mesa&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Dublin&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Farmington&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Goldsboro&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Helena&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Iowa City&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Laguna Niguel&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Lincoln Park&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Maple Grove&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Minneapolis&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Nashua&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Oceanside&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Pasadena&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Port Arthur&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Richardson&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Saint Peters&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Seattle&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Temecula&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Vacaville&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Westland&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Athens&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Bloomington&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Canton&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Citrus Heights&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Cranston&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Eagan&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Fort Collins&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Grand Rapids&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Hendersonville&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Jacksonville&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Lake Forest&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Little Rock&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Marion&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Mission Viejo&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;New Bedford&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Olathe&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Paterson&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Portage&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Riverside&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Salinas&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Skokie&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Texas City&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Vineland&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Whittier&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Auburn&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Boise&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Carol Stream&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Cleveland&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Dallas&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Edinburg&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Fort Worth&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Great Falls&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Hialeah&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Jefferson City&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Lakeville&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Logan&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Mcallen&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Missouri City&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;New Castle&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Omaha&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Pembroke Pines&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Providence&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Rochester Hills&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;San Angelo&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;South Bend&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Thomasville&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Visalia&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Wilmington&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Antioch&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Bedford&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Brownsville&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Chesapeake&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Conway&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Des Plaines&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Evanston&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Gilbert&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Hampton&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Huntsville&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;La Mesa&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Lebanon&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Malden&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Middletown&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Murray&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;North Miami&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Palm Coast&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Pleasant Grove&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Redwood City&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Saginaw&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Santa Clara&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Tallahassee&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Tuscaloosa&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;West Allis&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Amarillo&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Bayonne&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Bristol&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Charlotte&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Commerce City&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Deltona&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Englewood&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Garland&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Hackensack&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Hot Springs&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Kirkwood&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Lawton&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Lubbock&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Mesa&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Mount Pleasant&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Norman&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Owensboro&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Plainfield&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Redlands&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Round Rock&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Sandy Springs&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Summerville&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Troy&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Waukesha&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Yucaipa&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Albuquerque&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Avondale&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Bowling Green&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Cedar Hill&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Coachella&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Dearborn&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;El Cajon&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Freeport&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Greenville&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Holland&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Jupiter&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Lansing&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Lorain&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Melbourne&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Montebello&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Newark&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Orem&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Perth Amboy&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Quincy&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Rockville&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;San Diego&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Spokane&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Tigard&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Warwick&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Woodland&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Arvada&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Beverly&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Caldwell&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Chula Vista&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Cottage Grove&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Dubuque&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Fayetteville&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Grand Island&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Hempstead&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Irving&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Lake Charles&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Linden&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Margate&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Miramar&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Nashville&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Odessa&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Pasco&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Port Orange&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Richmond&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Saint Petersburg&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Sierra Vista&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Tempe&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Vallejo&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Westminster&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Apopka&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Belleville&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Buffalo&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Chester&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Coppell&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Detroit&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Everett&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Gladstone&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Harlingen&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Independence&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;La Porte&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Lehi&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Manchester&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Midland&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Murrieta&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Norwich&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Park Ridge&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Pocatello&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Reno&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Saint Cloud&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Santa Fe&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Tamarac&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Tyler&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;West Jordan&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Alexandria&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Bakersfield&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Boynton Beach&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Cedar Rapids&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;College Station&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Dearborn Heights&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;El Paso&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Fremont&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Greenwood&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Hollywood&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Keller&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Laredo&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Los Angeles&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Memphis&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Montgomery&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Newport News&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Orland Park&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Pharr&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Raleigh&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Rogers&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;San Francisco&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Springfield&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Tinley Park&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Washington&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Woodstock&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:State:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Florida&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;New Jersey&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Alabama&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Michigan&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Tennessee&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Colorado&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Montana&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Virginia&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Indiana&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;North Dakota&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Georgia&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;New Mexico&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Connecticut&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Nebraska&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Washington&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Maryland&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;South Carolina&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Arizona&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Minnesota&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Texas&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Louisiana&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Pennsylvania&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Delaware&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Nevada&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Wisconsin&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Iowa&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Ohio&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Kansas&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Oklahoma&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Maine&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Rhode Island&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Massachusetts&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;South Dakota&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Idaho&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;New York&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;District of Columbia&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;New Hampshire&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Wyoming&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Arkansas&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Mississippi&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Utah&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Kentucky&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Oregon&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Illinois&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;North Carolina&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;California&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Missouri&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Vermont&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Category:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;Furniture&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Technology&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Office Supplies&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Region:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;Central&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;West&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;South&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;East&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Segment:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;Consumer&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Home Office&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Corporate&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Sub-Category:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Fasteners&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Accessories&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Bookcases&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Paper&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Furnishings&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Chairs&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Appliances&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Tables&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Copiers&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Phones&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Storage&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Labels&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Envelopes&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Art&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Supplies&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Machines&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Binders&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Ship Mode:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;First Class&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;Standard Class&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Second Class&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Same Day&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;India&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='SampleSuperstore.csv' id='SampleSuperstore.csv_A00F5B43E26B4BE0A4CD2F7CD0768C40'>
            <properties context=''>
              <relation connection='textscan.091s5y1010j78b10jcd491xzkcwv' name='SampleSuperstore.csv' table='[SampleSuperstore#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_IN' separator=','>
                  <column datatype='string' name='Ship Mode' ordinal='0' />
                  <column datatype='string' name='Segment' ordinal='1' />
                  <column datatype='string' name='Country' ordinal='2' />
                  <column datatype='string' name='City' ordinal='3' />
                  <column datatype='string' name='State' ordinal='4' />
                  <column datatype='integer' name='Postal Code' ordinal='5' />
                  <column datatype='string' name='Region' ordinal='6' />
                  <column datatype='string' name='Category' ordinal='7' />
                  <column datatype='string' name='Sub-Category' ordinal='8' />
                  <column datatype='real' name='Sales' ordinal='9' />
                  <column datatype='integer' name='Quantity' ordinal='10' />
                  <column datatype='real' name='Discount' ordinal='11' />
                  <column datatype='real' name='Profit' ordinal='12' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <shared-views>
    <shared-view name='federated.0vrwzww0gi9eod1fpuf6r0ebp8jv'>
      <datasources>
        <datasource caption='SampleSuperstore' name='federated.0vrwzww0gi9eod1fpuf6r0ebp8jv' />
      </datasources>
      <datasource-dependencies datasource='federated.0vrwzww0gi9eod1fpuf6r0ebp8jv'>
        <column datatype='string' name='[Category]' role='dimension' type='nominal' />
        <column datatype='string' name='[Segment]' role='dimension' type='nominal' />
        <column datatype='string' name='[Ship Mode]' role='dimension' type='nominal' />
        <column-instance column='[Category]' derivation='None' name='[none:Category:nk]' pivot='key' type='nominal' />
        <column-instance column='[Segment]' derivation='None' name='[none:Segment:nk]' pivot='key' type='nominal' />
        <column-instance column='[Ship Mode]' derivation='None' name='[none:Ship Mode:nk]' pivot='key' type='nominal' />
      </datasource-dependencies>
      <filter class='categorical' column='[federated.0vrwzww0gi9eod1fpuf6r0ebp8jv].[none:Category:nk]'>
        <groupfilter function='level-members' level='[none:Category:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
        <target field='[federated.0vrwzww0gi9eod1fpuf6r0ebp8jv].[none:Category:nk]' />
      </filter>
      <filter class='categorical' column='[federated.0vrwzww0gi9eod1fpuf6r0ebp8jv].[none:Segment:nk]'>
        <groupfilter function='level-members' level='[none:Segment:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
        <target field='[federated.0vrwzww0gi9eod1fpuf6r0ebp8jv].[none:Segment:nk]' />
      </filter>
      <filter class='categorical' column='[federated.0vrwzww0gi9eod1fpuf6r0ebp8jv].[none:Ship Mode:nk]'>
        <groupfilter function='level-members' level='[none:Ship Mode:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
        <target field='[federated.0vrwzww0gi9eod1fpuf6r0ebp8jv].[none:Ship Mode:nk]' />
      </filter>
    </shared-view>
  </shared-views>
  <actions>
    <action caption='Highlight 1 (generated)' name='[Action1_3773DD1DA1D54E7B9DBC69F8F497660F]'>
      <activation auto-clear='true' type='on-select' />
      <source type='sheet' worksheet='Sales by Sub Category' />
      <command command='tsc:brush'>
        <param name='field-captions' value='Sub-Category' />
        <param name='target' value='Sales by Sub Category' />
      </command>
    </action>
  </actions>
  <worksheets>
    <worksheet name='Avg Profit by Region'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1' fontcolor='#4e79a7' fontname='Tableau Medium'>Avg Profit by Region</run>
            <run>Ã†&#10;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='SampleSuperstore' name='federated.0vrwzww0gi9eod1fpuf6r0ebp8jv' />
          </datasources>
          <datasource-dependencies datasource='federated.0vrwzww0gi9eod1fpuf6r0ebp8jv'>
            <column datatype='string' name='[Category]' role='dimension' type='nominal' />
            <column datatype='real' name='[Profit]' role='measure' type='quantitative' />
            <column datatype='string' name='[Region]' role='dimension' type='nominal' />
            <column datatype='string' name='[Segment]' role='dimension' type='nominal' />
            <column datatype='string' name='[Ship Mode]' role='dimension' type='nominal' />
            <column-instance column='[Profit]' derivation='Avg' name='[avg:Profit:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Category]' derivation='None' name='[none:Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Region]' derivation='None' name='[none:Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[Segment]' derivation='None' name='[none:Segment:nk]' pivot='key' type='nominal' />
            <column-instance column='[Ship Mode]' derivation='None' name='[none:Ship Mode:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.0vrwzww0gi9eod1fpuf6r0ebp8jv].[avg:Profit:qk]' included-values='in-range' />
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.0vrwzww0gi9eod1fpuf6r0ebp8jv].[none:Region:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.0vrwzww0gi9eod1fpuf6r0ebp8jv].[avg:Profit:qk]' shelf='columns' />
          </shelf-sorts>
          <slices>
            <column>[federated.0vrwzww0gi9eod1fpuf6r0ebp8jv].[avg:Profit:qk]</column>
            <column>[federated.0vrwzww0gi9eod1fpuf6r0ebp8jv].[none:Category:nk]</column>
            <column>[federated.0vrwzww0gi9eod1fpuf6r0ebp8jv].[none:Segment:nk]</column>
            <column>[federated.0vrwzww0gi9eod1fpuf6r0ebp8jv].[none:Ship Mode:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='display' class='0' field='[federated.0vrwzww0gi9eod1fpuf6r0ebp8jv].[avg:Profit:qk]' scope='rows' value='false' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0vrwzww0gi9eod1fpuf6r0ebp8jv].[none:Region:nk]' />
              <text column='[federated.0vrwzww0gi9eod1fpuf6r0ebp8jv].[avg:Profit:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0vrwzww0gi9eod1fpuf6r0ebp8jv].[avg:Profit:qk]</rows>
        <cols>[federated.0vrwzww0gi9eod1fpuf6r0ebp8jv].[none:Region:nk]</cols>
      </table>
      <simple-id uuid='{5F5FCEB7-D403-4111-94CD-35DA2BF93FAC}' />
    </worksheet>
    <worksheet name='Profit'>
      <table>
        <view>
          <datasources>
            <datasource caption='SampleSuperstore' name='federated.0vrwzww0gi9eod1fpuf6r0ebp8jv' />
          </datasources>
          <datasource-dependencies datasource='federated.0vrwzww0gi9eod1fpuf6r0ebp8jv'>
            <column datatype='string' name='[Category]' role='dimension' type='nominal' />
            <column datatype='real' name='[Profit]' role='measure' type='quantitative' />
            <column datatype='string' name='[Region]' role='dimension' type='nominal' />
            <column datatype='string' name='[Segment]' role='dimension' type='nominal' />
            <column datatype='string' name='[Ship Mode]' role='dimension' type='nominal' />
            <column-instance column='[Category]' derivation='None' name='[none:Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Segment]' derivation='None' name='[none:Segment:nk]' pivot='key' type='nominal' />
            <column-instance column='[Ship Mode]' derivation='None' name='[none:Ship Mode:nk]' pivot='key' type='nominal' />
            <column-instance column='[Profit]' derivation='Sum' name='[sum:Profit:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0vrwzww0gi9eod1fpuf6r0ebp8jv].[Action (Region)]'>
            <groupfilter function='level-members' level='[Region]' user:ui-action-filter='[Action1_C7A4041D46CE43FDBEC6D8C501DBB9B2]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0vrwzww0gi9eod1fpuf6r0ebp8jv].[Action (Region)]</column>
            <column>[federated.0vrwzww0gi9eod1fpuf6r0ebp8jv].[none:Category:nk]</column>
            <column>[federated.0vrwzww0gi9eod1fpuf6r0ebp8jv].[none:Segment:nk]</column>
            <column>[federated.0vrwzww0gi9eod1fpuf6r0ebp8jv].[none:Ship Mode:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.0vrwzww0gi9eod1fpuf6r0ebp8jv].[sum:Profit:qk]' />
            </encodings>
            <customized-label>
              <formatted-text>
                <run bold='true' fontname='Tableau Medium' fontsize='15'>Profit</run>
                <run>Ã†&#10;</run>
                <run bold='true' fontname='Tableau Medium' fontsize='15'><![CDATA[<[federated.0vrwzww0gi9eod1fpuf6r0ebp8jv].[sum:Profit:qk]>]]></run>
              </formatted-text>
            </customized-label>
            <style>
              <style-rule element='cell'>
                <format attr='text-align' value='center' />
                <format attr='vertical-align' value='center' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{F4AAB0E3-A083-41D4-B230-C5BF2D48886C}' />
    </worksheet>
    <worksheet name='Profit &amp; Sales by Top 10State'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1' fontcolor='#4e79a7' fontname='Tableau Medium'>Profit and  sales by Top 10 State</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='SampleSuperstore' name='federated.0vrwzww0gi9eod1fpuf6r0ebp8jv' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.0vrwzww0gi9eod1fpuf6r0ebp8jv'>
            <column datatype='string' name='[Category]' role='dimension' type='nominal' />
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='real' name='[Profit]' role='measure' type='quantitative' />
            <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
            <column datatype='string' name='[Segment]' role='dimension' type='nominal' />
            <column datatype='string' name='[Ship Mode]' role='dimension' type='nominal' />
            <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[Category]' derivation='None' name='[none:Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[Segment]' derivation='None' name='[none:Segment:nk]' pivot='key' type='nominal' />
            <column-instance column='[Ship Mode]' derivation='None' name='[none:Ship Mode:nk]' pivot='key' type='nominal' />
            <column-instance column='[State]' derivation='None' name='[none:State:nk]' pivot='key' type='nominal' />
            <column-instance column='[Profit]' derivation='Sum' name='[sum:Profit:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0vrwzww0gi9eod1fpuf6r0ebp8jv].[none:State:nk]'>
            <groupfilter count='10' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='COUNT([Category])' function='order' user:ui-marker='order'>
                <groupfilter function='level-members' level='[none:State:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
              </groupfilter>
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0vrwzww0gi9eod1fpuf6r0ebp8jv].[none:State:nk]</column>
            <column>[federated.0vrwzww0gi9eod1fpuf6r0ebp8jv].[none:Category:nk]</column>
            <column>[federated.0vrwzww0gi9eod1fpuf6r0ebp8jv].[none:Segment:nk]</column>
            <column>[federated.0vrwzww0gi9eod1fpuf6r0ebp8jv].[none:Ship Mode:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0vrwzww0gi9eod1fpuf6r0ebp8jv].[Longitude (generated)]' field-type='quantitative' max='-5206618.2821243927' min='-16689946.97951439' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.0vrwzww0gi9eod1fpuf6r0ebp8jv].[Latitude (generated)]' field-type='quantitative' max='6148285.4796238858' min='3318051.0073440382' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0vrwzww0gi9eod1fpuf6r0ebp8jv].[none:State:nk]' />
              <text column='[federated.0vrwzww0gi9eod1fpuf6r0ebp8jv].[sum:Sales:qk]' />
              <text column='[federated.0vrwzww0gi9eod1fpuf6r0ebp8jv].[sum:Profit:qk]' />
              <lod column='[federated.0vrwzww0gi9eod1fpuf6r0ebp8jv].[none:Country:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0vrwzww0gi9eod1fpuf6r0ebp8jv].[Latitude (generated)]</rows>
        <cols>[federated.0vrwzww0gi9eod1fpuf6r0ebp8jv].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{D72B3411-4C30-4BCE-B9BE-FDB72D44D07C}' />
    </worksheet>
    <worksheet name='Quantity'>
      <table>
        <view>
          <datasources>
            <datasource caption='SampleSuperstore' name='federated.0vrwzww0gi9eod1fpuf6r0ebp8jv' />
          </datasources>
          <datasource-dependencies datasource='federated.0vrwzww0gi9eod1fpuf6r0ebp8jv'>
            <column datatype='string' name='[Category]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Quantity]' role='measure' type='quantitative' />
            <column datatype='string' name='[Region]' role='dimension' type='nominal' />
            <column datatype='string' name='[Segment]' role='dimension' type='nominal' />
            <column datatype='string' name='[Ship Mode]' role='dimension' type='nominal' />
            <column-instance column='[Category]' derivation='None' name='[none:Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Segment]' derivation='None' name='[none:Segment:nk]' pivot='key' type='nominal' />
            <column-instance column='[Ship Mode]' derivation='None' name='[none:Ship Mode:nk]' pivot='key' type='nominal' />
            <column-instance column='[Quantity]' derivation='Sum' name='[sum:Quantity:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0vrwzww0gi9eod1fpuf6r0ebp8jv].[Action (Region)]'>
            <groupfilter function='level-members' level='[Region]' user:ui-action-filter='[Action1_C7A4041D46CE43FDBEC6D8C501DBB9B2]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0vrwzww0gi9eod1fpuf6r0ebp8jv].[Action (Region)]</column>
            <column>[federated.0vrwzww0gi9eod1fpuf6r0ebp8jv].[none:Category:nk]</column>
            <column>[federated.0vrwzww0gi9eod1fpuf6r0ebp8jv].[none:Segment:nk]</column>
            <column>[federated.0vrwzww0gi9eod1fpuf6r0ebp8jv].[none:Ship Mode:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.0vrwzww0gi9eod1fpuf6r0ebp8jv].[sum:Quantity:qk]' />
            </encodings>
            <customized-label>
              <formatted-text>
                <run bold='true' fontname='Tableau Medium' fontsize='15'>Quantity</run>
                <run>Ã†&#10;</run>
                <run bold='true' fontname='Tableau Medium' fontsize='15'><![CDATA[<[federated.0vrwzww0gi9eod1fpuf6r0ebp8jv].[sum:Quantity:qk]>]]></run>
              </formatted-text>
            </customized-label>
            <style>
              <style-rule element='cell'>
                <format attr='text-align' value='center' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{B28B2A01-6775-47F1-B3CE-9E0CF3714CA0}' />
    </worksheet>
    <worksheet name='Sales'>
      <table>
        <view>
          <datasources>
            <datasource caption='SampleSuperstore' name='federated.0vrwzww0gi9eod1fpuf6r0ebp8jv' />
          </datasources>
          <datasource-dependencies datasource='federated.0vrwzww0gi9eod1fpuf6r0ebp8jv'>
            <column datatype='string' name='[Category]' role='dimension' type='nominal' />
            <column datatype='string' name='[Region]' role='dimension' type='nominal' />
            <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
            <column datatype='string' name='[Segment]' role='dimension' type='nominal' />
            <column datatype='string' name='[Ship Mode]' role='dimension' type='nominal' />
            <column-instance column='[Category]' derivation='None' name='[none:Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Segment]' derivation='None' name='[none:Segment:nk]' pivot='key' type='nominal' />
            <column-instance column='[Ship Mode]' derivation='None' name='[none:Ship Mode:nk]' pivot='key' type='nominal' />
            <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0vrwzww0gi9eod1fpuf6r0ebp8jv].[Action (Region)]'>
            <groupfilter function='level-members' level='[Region]' user:ui-action-filter='[Action1_C7A4041D46CE43FDBEC6D8C501DBB9B2]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0vrwzww0gi9eod1fpuf6r0ebp8jv].[Action (Region)]</column>
            <column>[federated.0vrwzww0gi9eod1fpuf6r0ebp8jv].[none:Category:nk]</column>
            <column>[federated.0vrwzww0gi9eod1fpuf6r0ebp8jv].[none:Segment:nk]</column>
            <column>[federated.0vrwzww0gi9eod1fpuf6r0ebp8jv].[none:Ship Mode:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.0vrwzww0gi9eod1fpuf6r0ebp8jv].[sum:Sales:qk]' />
            </encodings>
            <customized-label>
              <formatted-text>
                <run bold='true' fontname='Tableau Medium' fontsize='15'>Total Sales</run>
                <run>Ã†&#10;</run>
                <run bold='true' fontname='Tableau Medium' fontsize='15'><![CDATA[<[federated.0vrwzww0gi9eod1fpuf6r0ebp8jv].[sum:Sales:qk]>]]></run>
                <run>Ã†&#10;&#10;</run>
              </formatted-text>
            </customized-label>
            <style>
              <style-rule element='cell'>
                <format attr='text-align' value='center' />
                <format attr='vertical-align' value='center' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{09C131A3-63FD-458C-960F-01D291A6939A}' />
    </worksheet>
    <worksheet name='Sales by Category'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1' fontcolor='#4e79a7' fontname='Tableau Medium' fontsize='16'>Sales by Category</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='SampleSuperstore' name='federated.0vrwzww0gi9eod1fpuf6r0ebp8jv' />
          </datasources>
          <datasource-dependencies datasource='federated.0vrwzww0gi9eod1fpuf6r0ebp8jv'>
            <column datatype='string' name='[Category]' role='dimension' type='nominal' />
            <column datatype='string' name='[Region]' role='dimension' type='nominal' />
            <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
            <column datatype='string' name='[Segment]' role='dimension' type='nominal' />
            <column datatype='string' name='[Ship Mode]' role='dimension' type='nominal' />
            <column-instance column='[Category]' derivation='None' name='[none:Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Segment]' derivation='None' name='[none:Segment:nk]' pivot='key' type='nominal' />
            <column-instance column='[Ship Mode]' derivation='None' name='[none:Ship Mode:nk]' pivot='key' type='nominal' />
            <column-instance column='[Sales]' derivation='Sum' name='[pcto:sum:Sales:qk:2]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' type='PctTotal' />
            </column-instance>
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0vrwzww0gi9eod1fpuf6r0ebp8jv].[Action (Region)]'>
            <groupfilter function='level-members' level='[Region]' user:ui-action-filter='[Action1_C7A4041D46CE43FDBEC6D8C501DBB9B2]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0vrwzww0gi9eod1fpuf6r0ebp8jv].[Action (Region)]</column>
            <column>[federated.0vrwzww0gi9eod1fpuf6r0ebp8jv].[none:Category:nk]</column>
            <column>[federated.0vrwzww0gi9eod1fpuf6r0ebp8jv].[none:Segment:nk]</column>
            <column>[federated.0vrwzww0gi9eod1fpuf6r0ebp8jv].[none:Ship Mode:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Pie' />
            <encodings>
              <color column='[federated.0vrwzww0gi9eod1fpuf6r0ebp8jv].[none:Category:nk]' />
              <text column='[federated.0vrwzww0gi9eod1fpuf6r0ebp8jv].[pcto:sum:Sales:qk:2]' />
              <text column='[federated.0vrwzww0gi9eod1fpuf6r0ebp8jv].[none:Category:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{EAEF6F0A-B736-4971-96A8-8EBA6F230200}' />
    </worksheet>
    <worksheet name='Sales by Region '>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1' fontcolor='#4e79a7' fontname='Tableau Medium' fontsize='18'>Sales by Region</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='SampleSuperstore' name='federated.0vrwzww0gi9eod1fpuf6r0ebp8jv' />
          </datasources>
          <datasource-dependencies datasource='federated.0vrwzww0gi9eod1fpuf6r0ebp8jv'>
            <column datatype='string' name='[Category]' role='dimension' type='nominal' />
            <column datatype='string' name='[Region]' role='dimension' type='nominal' />
            <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
            <column datatype='string' name='[Segment]' role='dimension' type='nominal' />
            <column datatype='string' name='[Ship Mode]' role='dimension' type='nominal' />
            <column-instance column='[Category]' derivation='None' name='[none:Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Region]' derivation='None' name='[none:Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[Segment]' derivation='None' name='[none:Segment:nk]' pivot='key' type='nominal' />
            <column-instance column='[Ship Mode]' derivation='None' name='[none:Ship Mode:nk]' pivot='key' type='nominal' />
            <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.0vrwzww0gi9eod1fpuf6r0ebp8jv].[none:Region:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.0vrwzww0gi9eod1fpuf6r0ebp8jv].[sum:Sales:qk]' shelf='rows' />
          </shelf-sorts>
          <slices>
            <column>[federated.0vrwzww0gi9eod1fpuf6r0ebp8jv].[none:Category:nk]</column>
            <column>[federated.0vrwzww0gi9eod1fpuf6r0ebp8jv].[none:Segment:nk]</column>
            <column>[federated.0vrwzww0gi9eod1fpuf6r0ebp8jv].[none:Ship Mode:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='display' class='0' field='[federated.0vrwzww0gi9eod1fpuf6r0ebp8jv].[sum:Sales:qk]' scope='cols' value='false' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='rows' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0vrwzww0gi9eod1fpuf6r0ebp8jv].[none:Region:nk]' />
              <text column='[federated.0vrwzww0gi9eod1fpuf6r0ebp8jv].[sum:Sales:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0vrwzww0gi9eod1fpuf6r0ebp8jv].[none:Region:nk]</rows>
        <cols>[federated.0vrwzww0gi9eod1fpuf6r0ebp8jv].[sum:Sales:qk]</cols>
      </table>
      <simple-id uuid='{9869E33B-00B6-41EE-8FB4-5A85BEBA0A65}' />
    </worksheet>
    <worksheet name='Sales by Segment'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1' fontcolor='#4e79a7' fontname='Tableau Medium'>Sales by Segment</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='SampleSuperstore' name='federated.0vrwzww0gi9eod1fpuf6r0ebp8jv' />
          </datasources>
          <datasource-dependencies datasource='federated.0vrwzww0gi9eod1fpuf6r0ebp8jv'>
            <column datatype='string' name='[Category]' role='dimension' type='nominal' />
            <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
            <column datatype='string' name='[Segment]' role='dimension' type='nominal' />
            <column datatype='string' name='[Ship Mode]' role='dimension' type='nominal' />
            <column-instance column='[Category]' derivation='None' name='[none:Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Segment]' derivation='None' name='[none:Segment:nk]' pivot='key' type='nominal' />
            <column-instance column='[Ship Mode]' derivation='None' name='[none:Ship Mode:nk]' pivot='key' type='nominal' />
            <column-instance column='[Sales]' derivation='Sum' name='[pcto:sum:Sales:qk:2]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' type='PctTotal' />
            </column-instance>
            <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <slices>
            <column>[federated.0vrwzww0gi9eod1fpuf6r0ebp8jv].[none:Segment:nk]</column>
            <column>[federated.0vrwzww0gi9eod1fpuf6r0ebp8jv].[none:Category:nk]</column>
            <column>[federated.0vrwzww0gi9eod1fpuf6r0ebp8jv].[none:Ship Mode:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Pie' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.0vrwzww0gi9eod1fpuf6r0ebp8jv].[none:Segment:nk]' />
              <wedge-size column='[federated.0vrwzww0gi9eod1fpuf6r0ebp8jv].[sum:Sales:qk]' />
              <size column='[federated.0vrwzww0gi9eod1fpuf6r0ebp8jv].[sum:Sales:qk]' />
              <text column='[federated.0vrwzww0gi9eod1fpuf6r0ebp8jv].[pcto:sum:Sales:qk:2]' />
              <text column='[federated.0vrwzww0gi9eod1fpuf6r0ebp8jv].[none:Segment:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='1.2853591442108154' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{AC652E20-C571-4F0A-9495-3A2D0836A1C5}' />
    </worksheet>
    <worksheet name='Sales by Ship mode'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1' fontcolor='#4e79a7'>Segment Wise Profit  by Ship Mode</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='SampleSuperstore' name='federated.0vrwzww0gi9eod1fpuf6r0ebp8jv' />
          </datasources>
          <datasource-dependencies datasource='federated.0vrwzww0gi9eod1fpuf6r0ebp8jv'>
            <column datatype='string' name='[Category]' role='dimension' type='nominal' />
            <column datatype='real' name='[Profit]' role='measure' type='quantitative' />
            <column datatype='string' name='[Region]' role='dimension' type='nominal' />
            <column datatype='string' name='[Segment]' role='dimension' type='nominal' />
            <column datatype='string' name='[Ship Mode]' role='dimension' type='nominal' />
            <column-instance column='[Category]' derivation='None' name='[none:Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Segment]' derivation='None' name='[none:Segment:nk]' pivot='key' type='nominal' />
            <column-instance column='[Ship Mode]' derivation='None' name='[none:Ship Mode:nk]' pivot='key' type='nominal' />
            <column-instance column='[Profit]' derivation='Sum' name='[sum:Profit:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0vrwzww0gi9eod1fpuf6r0ebp8jv].[Action (Region)]'>
            <groupfilter function='level-members' level='[Region]' user:ui-action-filter='[Action1_C7A4041D46CE43FDBEC6D8C501DBB9B2]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.0vrwzww0gi9eod1fpuf6r0ebp8jv].[none:Ship Mode:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.0vrwzww0gi9eod1fpuf6r0ebp8jv].[sum:Profit:qk]' shelf='columns' />
          </shelf-sorts>
          <slices>
            <column>[federated.0vrwzww0gi9eod1fpuf6r0ebp8jv].[Action (Region)]</column>
            <column>[federated.0vrwzww0gi9eod1fpuf6r0ebp8jv].[none:Ship Mode:nk]</column>
            <column>[federated.0vrwzww0gi9eod1fpuf6r0ebp8jv].[none:Category:nk]</column>
            <column>[federated.0vrwzww0gi9eod1fpuf6r0ebp8jv].[none:Segment:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0vrwzww0gi9eod1fpuf6r0ebp8jv].[none:Ship Mode:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.0vrwzww0gi9eod1fpuf6r0ebp8jv].[sum:Profit:qk]</rows>
        <cols>([federated.0vrwzww0gi9eod1fpuf6r0ebp8jv].[none:Segment:nk] / [federated.0vrwzww0gi9eod1fpuf6r0ebp8jv].[none:Ship Mode:nk])</cols>
      </table>
      <simple-id uuid='{7B569E03-0E0E-46AB-93B3-224067BE8D7A}' />
    </worksheet>
    <worksheet name='Sales by Sub Category'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1' fontcolor='#4e79a7' fontname='Tableau Medium'>Sales by Sub - Category</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='SampleSuperstore' name='federated.0vrwzww0gi9eod1fpuf6r0ebp8jv' />
          </datasources>
          <datasource-dependencies datasource='federated.0vrwzww0gi9eod1fpuf6r0ebp8jv'>
            <column datatype='string' name='[Category]' role='dimension' type='nominal' />
            <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
            <column datatype='string' name='[Segment]' role='dimension' type='nominal' />
            <column datatype='string' name='[Ship Mode]' role='dimension' type='nominal' />
            <column datatype='string' name='[Sub-Category]' role='dimension' type='nominal' />
            <column-instance column='[Category]' derivation='None' name='[none:Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Segment]' derivation='None' name='[none:Segment:nk]' pivot='key' type='nominal' />
            <column-instance column='[Ship Mode]' derivation='None' name='[none:Ship Mode:nk]' pivot='key' type='nominal' />
            <column-instance column='[Sub-Category]' derivation='None' name='[none:Sub-Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.0vrwzww0gi9eod1fpuf6r0ebp8jv].[none:Sub-Category:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.0vrwzww0gi9eod1fpuf6r0ebp8jv].[sum:Sales:qk]' shelf='columns' />
          </shelf-sorts>
          <slices>
            <column>[federated.0vrwzww0gi9eod1fpuf6r0ebp8jv].[none:Category:nk]</column>
            <column>[federated.0vrwzww0gi9eod1fpuf6r0ebp8jv].[none:Segment:nk]</column>
            <column>[federated.0vrwzww0gi9eod1fpuf6r0ebp8jv].[none:Ship Mode:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0vrwzww0gi9eod1fpuf6r0ebp8jv].[none:Sub-Category:nk]' />
              <text column='[federated.0vrwzww0gi9eod1fpuf6r0ebp8jv].[none:Sub-Category:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0vrwzww0gi9eod1fpuf6r0ebp8jv].[sum:Sales:qk]</rows>
        <cols>[federated.0vrwzww0gi9eod1fpuf6r0ebp8jv].[none:Sub-Category:nk]</cols>
      </table>
      <simple-id uuid='{3112C24F-9227-49C1-AB40-9049556F42EB}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard _.fcp.AccessibleZoneTabOrder.true...enable-sort-zone-taborder='true' name='Sample Superstore Dashboard'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1' fontcolor='#4e79a7' fontname='Tableau Bold' fontsize='20'>Sample Superstore Dashboard</run>
          </formatted-text>
        </title>
      </layout-options>
      <style />
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <datasources>
        <datasource caption='SampleSuperstore' name='federated.0vrwzww0gi9eod1fpuf6r0ebp8jv' />
      </datasources>
      <datasource-dependencies datasource='federated.0vrwzww0gi9eod1fpuf6r0ebp8jv'>
        <column datatype='string' name='[Category]' role='dimension' type='nominal' />
        <column datatype='string' name='[Segment]' role='dimension' type='nominal' />
        <column datatype='string' name='[Ship Mode]' role='dimension' type='nominal' />
        <column-instance column='[Category]' derivation='None' name='[none:Category:nk]' pivot='key' type='nominal' />
        <column-instance column='[Segment]' derivation='None' name='[none:Segment:nk]' pivot='key' type='nominal' />
        <column-instance column='[Ship Mode]' derivation='None' name='[none:Ship Mode:nk]' pivot='key' type='nominal' />
      </datasource-dependencies>
      <zones>
        <zone h='100000' id='4' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='98000' id='5' param='vert' type-v2='layout-flow' w='98400' x='800' y='1000'>
            <zone fixed-size='38' h='5750' id='7' is-fixed='true' type-v2='title' w='98400' x='800' y='1000'>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='4' />
              </zone-style>
            </zone>
            <zone h='92250' id='6' type-v2='layout-basic' w='98400' x='800' y='6750' />
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
        <zone h='13125' id='10' name='Profit' show-title='false' w='17700' x='19500' y='7000' />
        <zone h='13250' id='11' name='Quantity' show-title='false' w='17900' x='36800' y='7000' />
        <zone h='13250' id='15' name='Sales' show-title='false' w='20200' x='-700' y='7000' />
        <zone h='22125' id='16' param='horz' type-v2='layout-flow' w='99600' x='400' y='20125' />
        <zone h='27875' id='17' param='horz' type-v2='layout-flow' w='99700' x='500' y='78750' />
        <zone h='21500' id='19' name='Sales by Category' w='30200' x='37700' y='20375' />
        <zone h='36750' id='20' name='Sales by Ship mode' w='46900' x='52300' y='42125' />
        <zone h='21375' id='21' name='Sales by Region ' w='31600' x='300' y='20375' />
        <zone h='22000' id='22' name='Sales by Segment' w='31500' x='68400' y='20000' />
        <zone h='36750' id='23' name='Profit &amp; Sales by Top 10State' w='51800' x='500' y='42375' />
        <zone h='26875' id='24' name='Sales by Sub Category' w='60900' x='500' y='79375' />
        <zone h='27125' id='25' name='Avg Profit by Region' w='38400' x='61400' y='79250' />
        <zone h='12750' id='86' mode='dropdown' name='Sales by Category' param='[federated.0vrwzww0gi9eod1fpuf6r0ebp8jv].[none:Category:nk]' type-v2='filter' values='database' w='12700' x='54800' y='7000' />
        <zone h='12875' id='87' mode='dropdown' name='Sales by Segment' param='[federated.0vrwzww0gi9eod1fpuf6r0ebp8jv].[none:Segment:nk]' type-v2='filter' values='database' w='15600' x='67300' y='7125' />
        <zone h='12750' id='122' mode='dropdown' name='Sales by Ship mode' param='[federated.0vrwzww0gi9eod1fpuf6r0ebp8jv].[none:Ship Mode:nk]' type-v2='filter' values='database' w='16000' x='83400' y='6625' />
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <layout-options>
            <title>
              <formatted-text>
                <run bold='true' fontalignment='1' fontcolor='#4e79a7' fontname='Tableau Bold' fontsize='20'>Sample Superstore Dashboard</run>
              </formatted-text>
            </title>
          </layout-options>
          <size maxheight='2150' minheight='2150' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='130' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='98000' id='129' param='vert' type-v2='layout-flow' w='98400' x='800' y='1000'>
                <zone fixed-size='38' h='5750' id='7' type-v2='title' w='98400' x='800' y='1000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='106' h='13250' id='15' is-fixed='true' name='Sales' show-title='false' w='20200' x='-700' y='7000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='105' h='13125' id='10' is-fixed='true' name='Profit' show-title='false' w='17700' x='19500' y='7000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='106' h='13250' id='11' is-fixed='true' name='Quantity' show-title='false' w='17900' x='36800' y='7000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='12875' id='87' mode='dropdown' name='Sales by Segment' param='[federated.0vrwzww0gi9eod1fpuf6r0ebp8jv].[none:Segment:nk]' type-v2='filter' values='database' w='15600' x='67300' y='7125'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='176' h='22000' id='22' is-fixed='true' name='Sales by Segment' w='31500' x='68400' y='20000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='171' h='21375' id='21' is-fixed='true' name='Sales by Region ' w='31600' x='300' y='20375'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='12750' id='86' mode='dropdown' name='Sales by Category' param='[federated.0vrwzww0gi9eod1fpuf6r0ebp8jv].[none:Category:nk]' type-v2='filter' values='database' w='12700' x='54800' y='7000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='172' h='21500' id='19' is-fixed='true' name='Sales by Category' w='30200' x='37700' y='20375'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='12750' id='122' mode='dropdown' name='Sales by Ship mode' param='[federated.0vrwzww0gi9eod1fpuf6r0ebp8jv].[none:Ship Mode:nk]' type-v2='filter' values='database' w='16000' x='83400' y='6625'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='36750' id='20' is-fixed='true' name='Sales by Ship mode' w='46900' x='52300' y='42125'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='36750' id='23' is-fixed='true' name='Profit &amp; Sales by Top 10State' w='51800' x='500' y='42375'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='217' h='27125' id='25' is-fixed='true' name='Avg Profit by Region' w='38400' x='61400' y='79250'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='215' h='26875' id='24' is-fixed='true' name='Sales by Sub Category' w='60900' x='500' y='79375'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{F240D73A-02B5-4033-9DBA-E02B9D9BE59A}' />
    </dashboard>
  </dashboards>
  <windows saved-dpi-scale-factor='1.25' source-height='37'>
    <window class='worksheet' name='Sales by Region '>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0vrwzww0gi9eod1fpuf6r0ebp8jv].[none:Region:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0vrwzww0gi9eod1fpuf6r0ebp8jv].[none:Region:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{07CE8856-1758-48A3-A274-7F189495108F}' />
    </window>
    <window class='worksheet' name='Sales by Category'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0vrwzww0gi9eod1fpuf6r0ebp8jv].[none:Category:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
      </viewpoint>
      <simple-id uuid='{2112926E-D4F8-4DDF-AD84-DB87B879CB77}' />
    </window>
    <window class='worksheet' name='Sales by Sub Category'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0vrwzww0gi9eod1fpuf6r0ebp8jv].[none:Sub-Category:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
      </viewpoint>
      <simple-id uuid='{83C984AD-09FF-48A5-805D-D57B3232A6A1}' />
    </window>
    <window class='worksheet' name='Profit &amp; Sales by Top 10State'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0vrwzww0gi9eod1fpuf6r0ebp8jv].[none:State:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0vrwzww0gi9eod1fpuf6r0ebp8jv].[none:Category:nk]</field>
            <field>[federated.0vrwzww0gi9eod1fpuf6r0ebp8jv].[none:City:nk]</field>
            <field>[federated.0vrwzww0gi9eod1fpuf6r0ebp8jv].[none:Country:nk]</field>
            <field>[federated.0vrwzww0gi9eod1fpuf6r0ebp8jv].[none:Ship Mode:nk]</field>
            <field>[federated.0vrwzww0gi9eod1fpuf6r0ebp8jv].[none:State:nk]</field>
            <field>[federated.0vrwzww0gi9eod1fpuf6r0ebp8jv].[sum:Profit:qk]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='1' />
      </viewpoint>
      <simple-id uuid='{2CA71538-C44A-4C62-831B-001ED99E7C19}' />
    </window>
    <window class='worksheet' name='Sales by Ship mode'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0vrwzww0gi9eod1fpuf6r0ebp8jv].[none:Ship Mode:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0vrwzww0gi9eod1fpuf6r0ebp8jv].[none:Ship Mode:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{0E78B16D-2DBC-4D75-8865-17B18AC4813F}' />
    </window>
    <window class='worksheet' name='Sales by Segment'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0vrwzww0gi9eod1fpuf6r0ebp8jv].[none:Segment:nk]' type='color' />
            <card pane-specification-id='0' param='[federated.0vrwzww0gi9eod1fpuf6r0ebp8jv].[sum:Sales:qk]' type='size' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.0vrwzww0gi9eod1fpuf6r0ebp8jv].[none:Segment:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{6D90BF0C-605F-447C-867B-8D1A11E258BE}' />
    </window>
    <window class='worksheet' name='Avg Profit by Region'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.0vrwzww0gi9eod1fpuf6r0ebp8jv].[avg:Profit:qk]' show-domain='false' show-null-ctrls='false' type='filter' />
            <card pane-specification-id='0' param='[federated.0vrwzww0gi9eod1fpuf6r0ebp8jv].[none:Region:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.0vrwzww0gi9eod1fpuf6r0ebp8jv].[none:Region:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{C447D35D-47AD-468E-9E14-BF3F633FF07B}' />
    </window>
    <window class='worksheet' name='Sales'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
      </viewpoint>
      <simple-id uuid='{FC2B6768-71FD-428E-A05C-069619239EC3}' />
    </window>
    <window class='worksheet' name='Profit'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <selection-collection>
          <tuple-selection>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields />
                  <y-fields />
                </pane-descriptor>
                <columns>
                  <field>[federated.0vrwzww0gi9eod1fpuf6r0ebp8jv].[sum:Profit:qk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>202352.99309999996</value>
              </tuple>
            </tuple-reference>
          </tuple-selection>
        </selection-collection>
      </viewpoint>
      <simple-id uuid='{7BD4212B-B64E-48DD-A71E-BC62689A7F01}' />
    </window>
    <window class='worksheet' name='Quantity'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
      </viewpoint>
      <simple-id uuid='{D4B2BBF2-21E5-4D73-999B-A50F5A995AD6}' />
    </window>
    <window class='dashboard' maximized='true' name='Sample Superstore Dashboard'>
      <viewpoints>
        <viewpoint name='Avg Profit by Region'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Profit'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Profit &amp; Sales by Top 10State'>
          <zoom type='entire-view' />
          <default-map-tool-selection tool='1' />
        </viewpoint>
        <viewpoint name='Quantity'>
          <zoom type='entire-view' />
          <selection-collection>
            <tuple-selection>
              <tuple-reference>
                <tuple-descriptor>
                  <pane-descriptor>
                    <x-fields />
                    <y-fields />
                  </pane-descriptor>
                  <columns>
                    <field>[federated.0vrwzww0gi9eod1fpuf6r0ebp8jv].[sum:Profit:qk]</field>
                    <field>[federated.0vrwzww0gi9eod1fpuf6r0ebp8jv].[sum:Quantity:qk]</field>
                    <field>[federated.0vrwzww0gi9eod1fpuf6r0ebp8jv].[sum:Sales:qk]</field>
                  </columns>
                </tuple-descriptor>
                <tuple>
                  <value>202352.99310000055</value>
                  <value>26505</value>
                  <value>1613479.5318999721</value>
                </tuple>
              </tuple-reference>
            </tuple-selection>
          </selection-collection>
        </viewpoint>
        <viewpoint name='Sales'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Sales by Category'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Sales by Region '>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Sales by Segment'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Sales by Ship mode'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Sales by Sub Category'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='-1' />
      <simple-id uuid='{235A067C-858B-4EA3-9EB9-89D3AE6FE5F4}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Avg Profit by Region' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAABJ0AAASdAHeZh94
      AAAG3ElEQVR4nO3dW28TiRnG8WcOdk4KdrLksF4E4tioIFVCqlQhub3vDXyOfol+jH6QVtpe
      9LIXIOBipWVRzArCQrJLDiYhir2JxzO9WSzRdsmgTDJjnv/vEjnOy2T+HjtyXgdZlmUCTIVl
      DwCUaRTAcDgscw6gFFwBYI0AYI0AYI0AYI0AYI0AYI0AYI0AYC0ue4D/p9vt6tGjR7p27Zpa
      rZYePnyodrutjY0NPXnyRI1GQ8PhUGma6s6dOwqCoOyRMaYqGUCj0dDS0pI2Njb0+vVr7e7u
      SpJarZbSNNXe3p6ePXumIAiUJIlqtVrJE2NcVfIpUJIkajab2t7e1vr6ulZXV9Xr9SRJq6ur
      unLliuI4VhzHvIUDJ1LJK8C7d+/U6XR0+/ZtXbx4US9fvtT+/r5qtZpu3LihyclJLS4uKssy
      1ev1ssfFGAvevx16MBjwXBp2RleAMAwVRdGxX3B4/29KN5+e6lBVEy6uaOIPfyl7DJyCT34K
      NPzxGw3X/n0as1RWlByWPQJOSSVfBANnhQBgjQBgjQBgjQBgjQBgjQBgjQBgjQBgjQBgjQBg
      rZJvh0YxVldX1el0dP36dT148ED37t1To9HQixcv9PjxY7Xbbd2/f1/z8/Nqt9tlj1sKrgCf
      seXlZW1vb2tubk43b94c/fHQ5cuX1Ww2dXBwoCiKtLa2Vu6gJeIK8Bnb3NzUysqKOp2ONjY2
      FEWRgiBQv9/X8+fPdevWLS0sLGh6errsUUtDAJ+xCxcuqNlsqtlsqtvtqlaraXJyUnEc6+7d
      u5qdndXVq1c1NzdX9qilIYCSHJ3B3zJH9boa8/PKJM2dP//Bv0/88qh/bmJCQ53NevwoCBSF
      1XrWTQAl+eu/vlZq9uE8f/7Nb/Wny1fLHuMD1coROGMEAGsEAGsEAGujF8FpmirPJ6Y6fqpq
      lmVKkqTsMcZelqaVO46fvBfoyHB5VhAEimN+YXZSQRgWehzf/f0f2v/6nye6D36qGFtpr6dh
      t3ui++A1AKwRAKwRAKwRAKwRAKwRAKwRAKwRAKwRAKwRAKwRAKwRAKwRAKwRAKwRAKwRAKwR
      AKwRAKwRAKwRAKwRAKwRAKyxGCsHFmMVo+jFWGmanvg+WIyVA4uxilH0YqywgM8a4CkQrBEA
      rBEArBEArBEArBEArBEArBEArBEArBEArBEArBEArBEArBEArBEArBEArBEArBEArBEArBEA
      rBEArBEArLEXKAf2AhWDvUBjir1AxWAvEFAxBABrBABrBABrBABrBABrBABrBABrBABrBABr
      BABrBABrBABrBABrBABrBABrBABrBABrBABrBABrBABrBABrox0VWZbl27PitxZIUs5jg4/K
      fY59wv2dFFcAnJkqbpQaXQGCIMi3aKiK/4tTl/PY4OPynmO57+7kJyM/VVgjAFgjAFgjAFgj
      AFgjAFgjAFgjAFgjAFgjAFgjAFgjAFgjAFgjAFgjAFgjAFgjAFgjAFgjAFgjAFgjAFgjAFgb
      rUVJ0zTXoqEilhGNmyzLlCRJ2WOMvSxNCz2ORSzZGgUQhqGiKDr2C44K2MUyboIgUBzHx98Q
      HxWEYaHHsYgdQzwFgjUCgDUCgDUCgDUCgDUCgDUCgDUCgDUCgDUCgDUCgDUCgDUCgDUCgDUC
      gDUCgDUCgDUCgDUCgDUCgDUCgDUCgLUP9gLl4boXaDgclj3G2MvStNDjWMS5OAogCIJce1YC
      071AReygcReExR7HIs7FDwJwPLnz4tgUoXrnGA9rsEYAsEYAsEYAsEYAsEYAsEYAsEYAsEYA
      sEYAsEYAsEYAsEYAsEYAsEYAsEYAsEYAsEYAsEYAsEYAsEYAsEYAsBZkv2wXGgwGuXa2ZL2u
      suHhqQ9WJUE0oWB6/tjbvV/UlGf1x+7Pfclsx9hUraaJOD72dmma5joX015Paa93oplGAeT9
      pvh1nxIAft1Znouj71K5kz/L1Hn6rTrfr+m/lzZm6VA/Hx6VMtbHVG252DA51Nvdfa2/+kGD
      ZKidne7/3Kbf71fuQnSW5+Lx16MSHQ4StZaa2u9u6odXP2qp1dKbN9v6olnX02c/qf3HO6pH
      1TnhqiYMQ21tbSk72FISRBoMpe7Wd4qnmxoc7Giqsajvv/tGK7/7vb5cmCt73FJU7GH/Q+8f
      UXd3d5UcbGm7lykOhgrrM7p06ZJqlZ6+fEFYk9ID1ZtfaevVc81MSus/7WmQDDQxMal+v6/l
      ry5q+Xyz7FFLU+krwEQt0vbOW83Nzuhw/ks1Zmp62481O9vUfndNg1SqR2VPWW1fnDun+nxL
      sRItLiyrt7evyZkZpb0jTU1Na2qmpjc7u1o+73kF+A+lt9lJ3eRufAAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Profit' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAABJ0AAASdAHeZh94
      AAAEVklEQVR4nO3ZPWhdBRiH8f+5rUlqkprU2BB16SZG7CBVii1UBzsoiGgFaweVIFgKghCd
      IlKRVKySgsWOQkBQUbJEilI3QQpBUIoSidiPUElumk+TNrn3HicF3W3gPs9vOnDO8C4P7wun
      KMuyjARV2ewBpM209e+HiepqrtcamzmLdNP9E8D1WiNrda8hsXgCCc0AhGYAQjMAoRmA0AxA
      aAYgNAMQmgEIzQCEZgBCMwChGYDQDEBoBiA0AxCaAQjNAIRmAEIzAKEZgNAMQGgGIDQDEJoB
      CM0AhGYAQjMAoRmA0AxAaAYgNAMQmgEIzQCEZgBCMwChGYDQDEBoBiA0AxCaAQjNAIRmAEIz
      AKEZgNAMQGgGIDQDEJoBCM0AhGYAQjMAoRmA0AxAaAYgNAMQmgEIzQCEZgBCMwChGYDQDEBo
      BiA0AxCaAQjNAIRmAEIzAKEZgNAMQGgGIDQDEJoBCM0AhGYAQjMAoRmA0AxAaAYgNAMQmgEI
      zQCEZgBCMwChGYDQDEBoBiC0rZs9gPR/WV1eygfHXkxnd3e6enrz3OBQWlrb/vWNG0DNqyxz
      a0dnjr57OhvrN3Lplws59+lozn89ntkrlzJx7qwBqLmtrixl/OOPslidSXdvX77/aixTP/2Q
      mSsXc/6bcU8gNbdbWlrT/9C+HDwykEqlku239+TQq2/k9ws/prNrhxtAzauoVNJz593Z1b87
      29o7UhSVdN2xM5Wikl39u9PW3pGiLMsySb77YyVr9XKzZ5ZuKjeA0AxAaAagplLb2MhCdSY3
      1taSJPVaLYvV2dQ21v/zfjWJP8LURBqNRkaHh1KWZf5cXMjA8ZMZOzOSpWvVVLZsyQtDw/nk
      veOp12pZnp/Ly++MuAHUPIqiyNPHBnN48M006vVM//Zr5q5OZ+Dt99PS2pbLkz/nqVdey/Ov
      v5WkyOrykhtAzaMoiizNzWbszKnseezxtHduz7aOzlQqW9J+W3durK1lef5aRoeH8sCjB7Oj
      t88NoOaxsb6ez0ZO5MAzh3Pf3v3p6NqRxepspqcmMz01me6dvfn81Insf/LZ3L/vQOr1mv8B
      1DxWFubzxemTKRuNpCjyxEtHM3P5Yia+PZt79uzNvQ8+nC8/PJl6vZYkeeTQEQMQV/XqtCeQ
      uHr67jIAsRmA0AxAaAYgNAMQmgEIzQCEZgBCMwChGYDQDEBoBiA0AxCaAQjNAIRmAEIzAKEZ
      gNAMQGgGIDQDEJoBCM0AhGYAQjMAoRmA0AxAaAYgNAMQmgEIzQCEZgBCMwChGYDQDEBoBiA0
      AxCaAQjNAIRmAEIzAKEZgNAMQGgGIDQDEJoBCM0AhGYAQjMAoRmA0AxAaAYgNAMQmgEIzQCE
      ZgBCMwChGYDQDEBoBiA0AxCaAQjNAIRmAEIzAKEZgNAMQGgGIDQDEJoBCM0AhGYAQjMAoRmA
      0AxAaAYgNAMQmgEIzQCEZgBCMwChGYDQDEBoBiA0AxDaX4Ru4wbMc1v3AAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Profit &amp; Sales by Top 10State' width='192'>
      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
      TkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Quantity' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAABJ0AAASdAHeZh94
      AAAEQklEQVR4nO3ZPUsrWxiG4cdE0IkpjKYQ8fMXCP4DLWxNrXZBrKxTpNBGK0EEK7FStLER
      UlkJKmqtXSpBCDFIAgpGmRlnF7s51eEUZ29hnvuqZ+Btbta7WD1JkiQCTGV+egDgJxEArBEA
      rBEArBEArBEArBEArBEArBEArBEArBEArBEArBEArBEArBEArBEArBEArBEArBEArBEArBEA
      rBEArBEArBEArBEArBEArBEArBEArBEArBEArBEArBEArBEArBEArBEArBEArBEArBEArBEA
      rBEArBEArBEArBEArBEArBEArBEArBEArBEArBEArBEArBEArBEArBEArBEArBEArBEArBEA
      rBEArBEArBEArBEArBEArBEArBEArBEArBEArBEArBEArBEArBEArBEArBEArBEArBEArBEA
      rBEArBEArBEArBEArBEArBEArBEArBEArBEArBEArBEArBEArBEArBEArBEArBEAUiFJEl1f
      X2t5eVlLS0u6uLj4T//1/uG5gL8iiiLt7e1pZ2dHvb29Wl9f1+zsrGq1mlZWVnR4eKhyuayj
      oyO1Wi2VSiX19PRwAiAdPj8/FYahxsbGNDIyov7+fjWbTd3c3CiKIl1eXiqOY+XzeWUyGR0c
      HKjRaBAA0iEIAgVBoHq9rqenJ4VhqEKhoDiO9fX1pTiOVa/XdXt7q+npaYVhKIkVCCmRzWZV
      qVS0u7urZrOphYUFFYtF5XI5bW9vq1AoaGhoSO/v73p4eFCxWFQQBOpJkiT56eGB/9Pb25uu
      rq40Pz+vXC73r98SAKxxB4A1AkAqhWGol5cXfXx8SPr9TvD6+qpOp6N/Lj1cgpE6YRiqUqko
      jmO1223t7+/r7OxM9/f3KhQK2tzc1MDAgCQCQAplMhlVq1UFQaDV1VU1Gg3VajWVSiWNjo4q
      CAJJv08FViCkTjabVavV0tramhYXFzU8PKwoijQ5OanT01M9Pj5Kkr6/vwkA6dPtdrWxsaFy
      uay5uTnlcjnl83kVi0UNDg4qiiLd3d2p0+kQANKn2+1qfHxc5+fn2traUrvdVrVa1cnJiWZm
      ZjQ1NaXj42P19fXxDgA/z8/PSpJEExMTBABvrECwRgCwRgCwRgCwRgCwRgCwRgCwRgCwRgCw
      RgCwRgCwRgCwRgCwRgCwRgCwRgCwRgCwRgCwRgCwRgCwRgCwRgCwRgCwRgCwRgCwRgCwRgCw
      RgCwRgCwRgCwRgCwRgCwRgCwRgCwRgCwRgCwRgCwRgCwRgCwRgCwRgCwRgCwRgCwRgCwRgCw
      RgCwRgCwRgCwRgCwRgCwRgCwRgCwRgCwRgCwRgCwRgCwRgCwRgCwRgCwRgCwRgCwRgCwRgCw
      RgCwRgCwRgCwRgCwRgCwRgCwRgCwRgCwRgCwRgCwRgCwRgCwRgCwRgCwRgCwRgCwRgCwRgCw
      RgCwRgCwRgCwRgCw9gthsOBiuzKq6AAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Sales' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAABJ0AAASdAHeZh94
      AAAEoUlEQVR4nO3ZvSu9fxzH8ddx07d0LCh3hZJBGSwsYrHKpmQ4o86oGFiExaD8AywmEwsx
      KKub4ZTQ6eQmd7mLxOk4Trmu8938sv36/QYdr+dj/HR9rj7L83p3XVckn8/nBZgq+ukDAD+J
      AGCNAGCNAGCNAGCNAGCNAGCNAGCNAGCNAGCNAGCNAGCNAGCNAGCNAGCNAGCNAGCNAGCNAGCN
      AGCNAGCNAGCNAGCNAGCNAGCNAGCNAGCNAGCNAGCNAGCNAGCNAGCNAGCNAGCNAGCNAGCNAGCN
      AGCNAGCNAGCNAGCNAGCNAGCNAGCNAGCNAGCNAGCNAGCNAGCNAGCNAGCNAGCNAGCNAGCNAGCN
      AGCNAGCNAGCNAGCNAGCNAGCNAGCNAGCNAGCNAGCNAGCNAGCNAGCNAGCNAGCNAGCNAGCNAGCN
      AGCNAGCNAGCNAGCNAGCNAGCNAGCNAGCNAGCNAGCNAGCNAGCNAGCNAGCt5KcPAPxXm5ub2t3d
      lSRFo1GNjo6qqOifZ/r9/b2enp7U1tb2bV8YhhoZGdH09DQTAIWro6ND7e3tenp60sDAgCQp
      mUzq8PBQQRBoY2NDi4uLSqVSSqfT2tnZ0enpqSTp5eVFYRgyAVC4qqqqVFdXp2g0qqamJq2t
      rWl9fV1//vxRZ2en7u7u9Pz8rOvra6VSKV1dXWl7e1vz8/Nf92AC4NdIJBKKxWIaHh5WIpFQ
      V1eX2tra1Nvbq4eHB6XTaUnS29vb1x4mAH6Nnp4eLSwsqKSkRP39/aqsrNTe3p5WVlZ0dHSk
      aDSqz8/Pb3si+Xw+/0PnBf63TCaj19dX1dXVSZJub28VhqHq6+slSTc3NyotLVVZWZleX19V
      VFSkiooKPT4+qr6+ngDgjXcAWCMAWCMAFLzz83NNTk4qlUp9W08kEorH4xobG9PHx4cuLy81
      NTWl4+NjhWGomZkZvgKh8O3v7+vk5ETZbPZrLZfLaXZ2Vt3d3WpoaFBxcbH29/d1dnamTCaj
      SCSivr4+JgAK3+DgoKqrq7+tZTIZpdNpNTY2anV1VclkUgMDA6qtrZUkRSIRBUFAAChs+Xxe
      2WxWYRgql8spCAIdHBwoEomovLxcra2tqqmp0fv7u7LZrIIgUC6X09vbm8rLy/kMisKWy+U0
      MTHx9Zc3FotpeXlZc3NzSiaTWlpaUktLi+LxuMbHx7+uGxoa0tbWFgHgd7m4uFAQBGpubv5X
      1xMArPEOAGsEAGsEAGsEAGsEAGsEAGsEAGsEAGsEAGsEAGsEAGsEAGsEAGsEAGsEAGsEAGsE
      AGsEAGsEAGsEAGsEAGsEAGsEAGsEAGsEAGsEAGsEAGsEAGsEAGsEAGsEAGsEAGsEAGsEAGsE
      AGsEAGsEAGsEAGsEAGsEAGsEAGsEAGsEAGsEAGsEAGsEAGsEAGsEAGsEAGsEAGsEAGsEAGsE
      AGsEAGsEAGsEAGsEAGsEAGsEAGsEAGsEAGsEAGsEAGsEAGsEAGsEAGsEAGsEAGsEAGsEAGsE
      AGsEAGsEAGsEAGsEAGsEAGsEAGsEAGsEAGsEAGsEAGsEAGsEAGsEAGsEAGsEAGsEAGsEAGt/
      ATNxF89unsgJAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Sales by Category' width='192'>
      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
      AhBakwCE1v4PYYAn4WZZ8TMAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='84' name='Sales by Region ' width='192'>
      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
      dDScUf4AAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Sales by Segment' width='192'>
      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
      7f8BMpiY01mv0IgAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Sales by Ship mode' width='192'>
      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
      rkJggg==
    </thumbnail>
    <thumbnail height='192' name='Sales by Sub Category' width='192'>
      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
      DjYAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Sample Superstore Dashboard' width='192'>
      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
    </thumbnail>
  </thumbnails>
</workbook>
