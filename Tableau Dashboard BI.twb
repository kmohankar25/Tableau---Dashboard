<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20224.22.1117.1841                               -->
<workbook original-version='18.1' source-build='2022.4.0 (20224.22.1117.1841)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <_.fcp.AccessibleZoneTabOrder.true...AccessibleZoneTabOrder />
    <_.fcp.AnimationOnByDefault.true...AnimationOnByDefault />
    <AutoCreateAndUpdateDSDPhoneLayouts />
    <IntuitiveSorting />
    <IntuitiveSorting_SP2 />
    <MapboxVectorStylesAndLayers />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <SetMembershipControl />
    <SheetIdentifierTracking />
    <WindowsPersistSimpleIdentifiers />
    <WorksheetBackgroundTransparency />
    <ZoneBackgroundTransparency />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <_.fcp.AnimationOnByDefault.false...style>
    <_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule element='animation'>
      <_.fcp.AnimationOnByDefault.false...format attr='animation-on' value='ao-on' />
    </_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule>
  </_.fcp.AnimationOnByDefault.false...style>
  <datasources>
    <datasource caption='SampleSuperstore' inline='true' name='federated.0vrwzww0gi9eod1fpuf6r0ebp8jv' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='SampleSuperstore' name='textscan.091s5y1010j78b10jcd491xzkcwv'>
            <connection class='textscan' directory='C:/Users/shubh/OneDrive/Desktop/Docs' filename='SampleSuperstore.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='textscan.091s5y1010j78b10jcd491xzkcwv' name='SampleSuperstore.csv' table='[SampleSuperstore#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_IN' separator=','>
            <column datatype='string' name='Ship Mode' ordinal='0' />
            <column datatype='string' name='Segment' ordinal='1' />
            <column datatype='string' name='Country' ordinal='2' />
            <column datatype='string' name='City' ordinal='3' />
            <column datatype='string' name='State' ordinal='4' />
            <column datatype='integer' name='Postal Code' ordinal='5' />
            <column datatype='string' name='Region' ordinal='6' />
            <column datatype='string' name='Category' ordinal='7' />
            <column datatype='string' name='Sub-Category' ordinal='8' />
            <column datatype='real' name='Sales' ordinal='9' />
            <column datatype='integer' name='Quantity' ordinal='10' />
            <column datatype='real' name='Discount' ordinal='11' />
            <column datatype='real' name='Profit' ordinal='12' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='textscan.091s5y1010j78b10jcd491xzkcwv' name='SampleSuperstore.csv' table='[SampleSuperstore#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_IN' separator=','>
            <column datatype='string' name='Ship Mode' ordinal='0' />
            <column datatype='string' name='Segment' ordinal='1' />
            <column datatype='string' name='Country' ordinal='2' />
            <column datatype='string' name='City' ordinal='3' />
            <column datatype='string' name='State' ordinal='4' />
            <column datatype='integer' name='Postal Code' ordinal='5' />
            <column datatype='string' name='Region' ordinal='6' />
            <column datatype='string' name='Category' ordinal='7' />
            <column datatype='string' name='Sub-Category' ordinal='8' />
            <column datatype='real' name='Sales' ordinal='9' />
            <column datatype='integer' name='Quantity' ordinal='10' />
            <column datatype='real' name='Discount' ordinal='11' />
            <column datatype='real' name='Profit' ordinal='12' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[SampleSuperstore.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_GB&quot;</attribute>
              <attribute datatype='string' name='currency'>&quot;â‚¹&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_IN&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Ship Mode</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Ship Mode]</local-name>
            <parent-name>[SampleSuperstore.csv]</parent-name>
            <remote-alias>Ship Mode</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[SampleSuperstore.csv_A00F5B43E26B4BE0A4CD2F7CD0768C40]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Segment</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Segment]</local-name>
            <parent-name>[SampleSuperstore.csv]</parent-name>
            <remote-alias>Segment</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[SampleSuperstore.csv_A00F5B43E26B4BE0A4CD2F7CD0768C40]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Country</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Country]</local-name>
            <parent-name>[SampleSuperstore.csv]</parent-name>
            <remote-alias>Country</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[SampleSuperstore.csv_A00F5B43E26B4BE0A4CD2F7CD0768C40]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>City</remote-name>
            <remote-type>129</remote-type>
            <local-name>[City]</local-name>
            <parent-name>[SampleSuperstore.csv]</parent-name>
            <remote-alias>City</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[SampleSuperstore.csv_A00F5B43E26B4BE0A4CD2F7CD0768C40]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>State</remote-name>
            <remote-type>129</remote-type>
            <local-name>[State]</local-name>
            <parent-name>[SampleSuperstore.csv]</parent-name>
            <remote-alias>State</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[SampleSuperstore.csv_A00F5B43E26B4BE0A4CD2F7CD0768C40]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Postal Code</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Postal Code]</local-name>
            <parent-name>[SampleSuperstore.csv]</parent-name>
            <remote-alias>Postal Code</remote-alias>
            <ordinal>5</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[SampleSuperstore.csv_A00F5B43E26B4BE0A4CD2F7CD0768C40]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Region</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Region]</local-name>
            <parent-name>[SampleSuperstore.csv]</parent-name>
            <remote-alias>Region</remote-alias>
            <ordinal>6</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[SampleSuperstore.csv_A00F5B43E26B4BE0A4CD2F7CD0768C40]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Category</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Category]</local-name>
            <parent-name>[SampleSuperstore.csv]</parent-name>
            <remote-alias>Category</remote-alias>
            <ordinal>7</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[SampleSuperstore.csv_A00F5B43E26B4BE0A4CD2F7CD0768C40]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Sub-Category</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Sub-Category]</local-name>
            <parent-name>[SampleSuperstore.csv]</parent-name>
            <remote-alias>Sub-Category</remote-alias>
            <ordinal>8</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[SampleSuperstore.csv_A00F5B43E26B4BE0A4CD2F7CD0768C40]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Sales</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Sales]</local-name>
            <parent-name>[SampleSuperstore.csv]</parent-name>
            <remote-alias>Sales</remote-alias>
            <ordinal>9</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[SampleSuperstore.csv_A00F5B43E26B4BE0A4CD2F7CD0768C40]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Quantity</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Quantity]</local-name>
            <parent-name>[SampleSuperstore.csv]</parent-name>
            <remote-alias>Quantity</remote-alias>
            <ordinal>10</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[SampleSuperstore.csv_A00F5B43E26B4BE0A4CD2F7CD0768C40]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Discount</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Discount]</local-name>
            <parent-name>[SampleSuperstore.csv]</parent-name>
            <remote-alias>Discount</remote-alias>
            <ordinal>11</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[SampleSuperstore.csv_A00F5B43E26B4BE0A4CD2F7CD0768C40]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Profit</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Profit]</local-name>
            <parent-name>[SampleSuperstore.csv]</parent-name>
            <remote-alias>Profit</remote-alias>
            <ordinal>12</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[SampleSuperstore.csv_A00F5B43E26B4BE0A4CD2F7CD0768C40]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='real' default-format='p0.00%' name='[Calculation1]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='SUM([Sales]) / TOTAL(SUM([Sales]))'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column datatype='string' name='[Category]' role='dimension' type='nominal' />
      <column datatype='string' name='[City]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
      <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column aggregation='Percentile' aggregation-param='50' datatype='real' name='[Discount]' role='measure' type='quantitative' visual-totals='Avg' />
      <column aggregation='Sum' datatype='integer' default-format='*00000' name='[Postal Code]' role='dimension' semantic-role='[ZipCode].[Name]' type='ordinal' />
      <column datatype='string' name='[Region]' role='dimension' type='nominal' />
      <column datatype='string' name='[Segment]' role='dimension' type='nominal' />
      <column datatype='string' name='[Ship Mode]' role='dimension' type='nominal' />
      <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <column datatype='string' name='[Sub-Category]' role='dimension' type='nominal' />
      <_.fcp.ObjectModelTableType.true...column caption='SampleSuperstore.csv' datatype='table' name='[__tableau_internal_object_id__].[SampleSuperstore.csv_A00F5B43E26B4BE0A4CD2F7CD0768C40]' role='measure' type='quantitative' />
      <column-instance column='[Category]' derivation='None' name='[none:Category:nk]' pivot='key' type='nominal' />
      <column-instance column='[City]' derivation='None' name='[none:City:nk]' pivot='key' type='nominal' />
      <column-instance column='[Region]' derivation='None' name='[none:Region:nk]' pivot='key' type='nominal' />
      <column-instance column='[Segment]' derivation='None' name='[none:Segment:nk]' pivot='key' type='nominal' />
      <column-instance column='[Ship Mode]' derivation='None' name='[none:Ship Mode:nk]' pivot='key' type='nominal' />
      <column-instance column='[State]' derivation='None' name='[none:State:nk]' pivot='key' type='nominal' />
      <column-instance column='[Sub-Category]' derivation='None' name='[none:Sub-Category:nk]' pivot='key' type='nominal' />
      <group caption='Action (Region)' hidden='true' name='[Action (Region)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Region]' />
        </groupfilter>
      </group>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:City:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Anaheim&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Baytown&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Broken Arrow&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Charlottesville&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Concord&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Denver&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Escondido&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Gastonia&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Haltom City&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Houston&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Knoxville&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Layton&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Macon&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Mesquite&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Mount Vernon&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;North Charleston&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Oxnard&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Plano&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Redmond&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Royal Oak&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Santa Ana&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Sunnyvale&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Tucson&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Wausau&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Yuma&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Abilene&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Aurora&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Bolingbrook&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Carrollton&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Clinton&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Danville&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Edmond&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Frankfort&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Green Bay&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Hickory&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Johnson City&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Lakewood&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Long Beach&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Medford&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Mobile&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;New Rochelle&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Ontario&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Pensacola&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Provo&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Rock Hill&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;San Antonio&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Southaven&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Thornton&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Waco&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Wilson&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Allen&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Baltimore&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Bozeman&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Champaign&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Colorado Springs&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Decatur&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Elkhart&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Fresno&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Gresham&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Holyoke&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Kenner&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Las Cruces&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Louisville&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Mentor&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Moorhead&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Niagara Falls&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Orlando&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Philadelphia&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Rancho Cucamonga&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Rome&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;San Gabriel&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Sterling Heights&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Toledo&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Waterbury&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Woonsocket&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Apple Valley&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Bellevue&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Buffalo Grove&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Cheyenne&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Coral Springs&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Dover&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Fairfield&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Glendale&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Harrisonburg&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Indianapolis&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;La Quinta&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Leominster&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Manhattan&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Milford&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Muskogee&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Oak Park&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Parker&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Pomona&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Renton&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Saint Louis&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Santa Maria&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Tampa&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Urbandale&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;West Palm Beach&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Ann Arbor&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Beaumont&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Broomfield&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Chattanooga&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Conroe&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Des Moines&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Eugene&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Georgetown&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Hamilton&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Huntington Beach&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;La Crosse&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;League City&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Madison&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Miami&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Murfreesboro&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;North Las Vegas&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Palatine&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Plantation&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Redondo Beach&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Sacramento&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Santa Barbara&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Superior&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Tulsa&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Waynesboro&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Allentown&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Bangor&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Brentwood&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Chandler&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Columbia&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Deer Park&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Elmhurst&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Frisco&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Grove City&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Homestead&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Kenosha&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Las Vegas&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Loveland&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Meriden&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Moreno Valley&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Noblesville&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Ormond Beach&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Phoenix&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Reading&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Roseville&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;San Jose&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Stockton&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Torrance&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Waterloo&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Yonkers&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Atlanta&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Boca Raton&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Carlsbad&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Clarksville&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Cuyahoga Falls&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Eau Claire&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Fort Lauderdale&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Grapevine&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Hesperia&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Jamestown&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Lakeland&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Littleton&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Marysville&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Missoula&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;New Brunswick&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Olympia&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Pearland&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Portland&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Rochester&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Salt Lake City&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Smyrna&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;The Colony&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Virginia Beach&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Wichita&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Akron&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Austin&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Bossier City&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Cary&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Clovis&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Daytona Beach&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Edmonds&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Franklin&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Greensboro&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Highland Park&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Jonesboro&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Lancaster&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Longview&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Medina&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Monroe&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;New York City&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Orange&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Peoria&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Pueblo&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Rockford&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;San Bernardino&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Sparks&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Thousand Oaks&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Warner Robins&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Woodbury&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Asheville&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Billings&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Cambridge&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Cincinnati&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Covington&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Durham&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Florence&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Grand Prairie&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Henderson&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Jackson&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Lake Elsinore&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Lindenhurst&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Marietta&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Mishawaka&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;New Albany&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Oklahoma City&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Passaic&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Port Saint Lucie&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Rio Rancho&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Salem&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Sioux Falls&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Texarkana&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Vancouver&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Wheeling&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Altoona&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Bartlett&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Bridgeton&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Chapel Hill&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Columbus&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Delray Beach&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Encinitas&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Gaithersburg&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Gulfport&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Hoover&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Kent&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Lawrence&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Lowell&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Meridian&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Morristown&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Norfolk&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Overland Park&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Pico Rivera&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Redding&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Roswell&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;San Mateo&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Suffolk&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Trenton&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Watertown&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;York&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Appleton&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Bellingham&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Bullhead City&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Chicago&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Corpus Christi&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Draper&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Fargo&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Glenview&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Hattiesburg&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Inglewood&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Lafayette&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Lewiston&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Manteca&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Milwaukee&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Naperville&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Oakland&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Parma&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Pompano Beach&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Revere&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Saint Paul&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Scottsdale&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Taylor&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Utica&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Westfield&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Arlington&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Bethlehem&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Burlington&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Chico&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Costa Mesa&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Dublin&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Farmington&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Goldsboro&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Helena&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Iowa City&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Laguna Niguel&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Lincoln Park&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Maple Grove&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Minneapolis&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Nashua&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Oceanside&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Pasadena&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Port Arthur&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Richardson&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Saint Peters&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Seattle&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Temecula&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Vacaville&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Westland&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Athens&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Bloomington&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Canton&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Citrus Heights&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Cranston&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Eagan&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Fort Collins&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Grand Rapids&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Hendersonville&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Jacksonville&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Lake Forest&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Little Rock&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Marion&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Mission Viejo&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;New Bedford&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Olathe&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Paterson&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Portage&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Riverside&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Salinas&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Skokie&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Texas City&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Vineland&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Whittier&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Auburn&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Boise&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Carol Stream&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Cleveland&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Dallas&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Edinburg&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Fort Worth&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Great Falls&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Hialeah&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Jefferson City&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Lakeville&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Logan&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Mcallen&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Missouri City&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;New Castle&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Omaha&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Pembroke Pines&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Providence&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Rochester Hills&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;San Angelo&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;South Bend&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Thomasville&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Visalia&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Wilmington&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Antioch&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Bedford&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Brownsville&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Chesapeake&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Conway&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Des Plaines&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Evanston&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Gilbert&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Hampton&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Huntsville&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;La Mesa&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Lebanon&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Malden&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Middletown&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Murray&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;North Miami&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Palm Coast&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Pleasant Grove&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Redwood City&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Saginaw&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Santa Clara&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Tallahassee&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Tuscaloosa&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;West Allis&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Amarillo&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Bayonne&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Bristol&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Charlotte&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Commerce City&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Deltona&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Englewood&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Garland&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Hackensack&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Hot Springs&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Kirkwood&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Lawton&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Lubbock&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Mesa&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Mount Pleasant&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Norman&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Owensboro&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Plainfield&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Redlands&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Round Rock&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Sandy Springs&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Summerville&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Troy&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Waukesha&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Yucaipa&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Albuquerque&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Avondale&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Bowling Green&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Cedar Hill&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Coachella&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Dearborn&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;El Cajon&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Freeport&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Greenville&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Holland&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Jupiter&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Lansing&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Lorain&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Melbourne&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Montebello&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Newark&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Orem&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Perth Amboy&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Quincy&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Rockville&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;San Diego&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Spokane&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Tigard&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Warwick&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Woodland&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Arvada&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Beverly&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Caldwell&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Chula Vista&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Cottage Grove&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Dubuque&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Fayetteville&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Grand Island&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Hempstead&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Irving&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Lake Charles&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Linden&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Margate&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Miramar&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Nashville&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Odessa&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Pasco&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Port Orange&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Richmond&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Saint Petersburg&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Sierra Vista&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Tempe&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Vallejo&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Westminster&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Apopka&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Belleville&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Buffalo&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Chester&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Coppell&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Detroit&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Everett&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Gladstone&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Harlingen&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Independence&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;La Porte&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Lehi&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Manchester&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Midland&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Murrieta&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Norwich&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Park Ridge&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Pocatello&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Reno&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Saint Cloud&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Santa Fe&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Tamarac&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Tyler&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;West Jordan&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Alexandria&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Bakersfield&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Boynton Beach&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Cedar Rapids&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;College Station&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Dearborn Heights&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;El Paso&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Fremont&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Greenwood&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Hollywood&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Keller&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Laredo&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Los Angeles&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Memphis&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Montgomery&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Newport News&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Orland Park&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Pharr&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Raleigh&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Rogers&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;San Francisco&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Springfield&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Tinley Park&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Washington&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Woodstock&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Category:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;Furniture&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Technology&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Office Supplies&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Sub-Category:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Fasteners&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Accessories&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Bookcases&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Paper&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Furnishings&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Chairs&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Appliances&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Tables&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Copiers&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Phones&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Storage&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Labels&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Envelopes&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Art&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Supplies&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Machines&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Binders&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:State:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Florida&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;New Jersey&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Alabama&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Michigan&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Tennessee&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Colorado&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Montana&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Virginia&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Indiana&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;North Dakota&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Georgia&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;New Mexico&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Connecticut&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Nebraska&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Washington&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Maryland&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;South Carolina&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Arizona&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Minnesota&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Texas&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Louisiana&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Pennsylvania&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Delaware&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Nevada&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Wisconsin&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Iowa&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Ohio&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Kansas&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Oklahoma&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Maine&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Rhode Island&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Massachusetts&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;South Dakota&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Idaho&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;New York&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;District of Columbia&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;New Hampshire&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Wyoming&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Arkansas&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Mississippi&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Utah&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Kentucky&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Oregon&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Illinois&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;North Carolina&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;California&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Missouri&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Vermont&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Ship Mode:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;First Class&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;Standard Class&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Second Class&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Same Day&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Segment:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;Consumer&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Home Office&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Corporate&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Region:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;Central&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;West&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;South&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;East&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;India&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='SampleSuperstore.csv' id='SampleSuperstore.csv_A00F5B43E26B4BE0A4CD2F7CD0768C40'>
            <properties context=''>
              <relation connection='textscan.091s5y1010j78b10jcd491xzkcwv' name='SampleSuperstore.csv' table='[SampleSuperstore#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_IN' separator=','>
                  <column datatype='string' name='Ship Mode' ordinal='0' />
                  <column datatype='string' name='Segment' ordinal='1' />
                  <column datatype='string' name='Country' ordinal='2' />
                  <column datatype='string' name='City' ordinal='3' />
                  <column datatype='string' name='State' ordinal='4' />
                  <column datatype='integer' name='Postal Code' ordinal='5' />
                  <column datatype='string' name='Region' ordinal='6' />
                  <column datatype='string' name='Category' ordinal='7' />
                  <column datatype='string' name='Sub-Category' ordinal='8' />
                  <column datatype='real' name='Sales' ordinal='9' />
                  <column datatype='integer' name='Quantity' ordinal='10' />
                  <column datatype='real' name='Discount' ordinal='11' />
                  <column datatype='real' name='Profit' ordinal='12' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <shared-views>
    <shared-view name='federated.0vrwzww0gi9eod1fpuf6r0ebp8jv'>
      <datasources>
        <datasource caption='SampleSuperstore' name='federated.0vrwzww0gi9eod1fpuf6r0ebp8jv' />
      </datasources>
      <datasource-dependencies datasource='federated.0vrwzww0gi9eod1fpuf6r0ebp8jv'>
        <column datatype='string' name='[Category]' role='dimension' type='nominal' />
        <column datatype='string' name='[Segment]' role='dimension' type='nominal' />
        <column datatype='string' name='[Ship Mode]' role='dimension' type='nominal' />
        <column-instance column='[Category]' derivation='None' name='[none:Category:nk]' pivot='key' type='nominal' />
        <column-instance column='[Segment]' derivation='None' name='[none:Segment:nk]' pivot='key' type='nominal' />
        <column-instance column='[Ship Mode]' derivation='None' name='[none:Ship Mode:nk]' pivot='key' type='nominal' />
      </datasource-dependencies>
      <filter class='categorical' column='[federated.0vrwzww0gi9eod1fpuf6r0ebp8jv].[none:Category:nk]'>
        <groupfilter function='level-members' level='[none:Category:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
        <target field='[federated.0vrwzww0gi9eod1fpuf6r0ebp8jv].[none:Category:nk]' />
      </filter>
      <filter class='categorical' column='[federated.0vrwzww0gi9eod1fpuf6r0ebp8jv].[none:Segment:nk]'>
        <groupfilter function='level-members' level='[none:Segment:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
        <target field='[federated.0vrwzww0gi9eod1fpuf6r0ebp8jv].[none:Segment:nk]' />
      </filter>
      <filter class='categorical' column='[federated.0vrwzww0gi9eod1fpuf6r0ebp8jv].[none:Ship Mode:nk]'>
        <groupfilter function='level-members' level='[none:Ship Mode:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
        <target field='[federated.0vrwzww0gi9eod1fpuf6r0ebp8jv].[none:Ship Mode:nk]' />
      </filter>
    </shared-view>
  </shared-views>
  <actions>
    <action caption='Highlight 1 (generated)' name='[Action1_3773DD1DA1D54E7B9DBC69F8F497660F]'>
      <activation auto-clear='true' type='on-select' />
      <source type='sheet' worksheet='Sales by Sub Category' />
      <command command='tsc:brush'>
        <param name='field-captions' value='Sub-Category' />
        <param name='target' value='Sales by Sub Category' />
      </command>
    </action>
  </actions>
  <worksheets>
    <worksheet name='Avg Profit by Region'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1' fontcolor='#4e79a7' fontname='Tableau Medium'>Avg Profit by Region</run>
            <run>Ã†&#10;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='SampleSuperstore' name='federated.0vrwzww0gi9eod1fpuf6r0ebp8jv' />
          </datasources>
          <datasource-dependencies datasource='federated.0vrwzww0gi9eod1fpuf6r0ebp8jv'>
            <column datatype='string' name='[Category]' role='dimension' type='nominal' />
            <column datatype='real' name='[Profit]' role='measure' type='quantitative' />
            <column datatype='string' name='[Region]' role='dimension' type='nominal' />
            <column datatype='string' name='[Segment]' role='dimension' type='nominal' />
            <column datatype='string' name='[Ship Mode]' role='dimension' type='nominal' />
            <column-instance column='[Profit]' derivation='Avg' name='[avg:Profit:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Category]' derivation='None' name='[none:Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Region]' derivation='None' name='[none:Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[Segment]' derivation='None' name='[none:Segment:nk]' pivot='key' type='nominal' />
            <column-instance column='[Ship Mode]' derivation='None' name='[none:Ship Mode:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.0vrwzww0gi9eod1fpuf6r0ebp8jv].[avg:Profit:qk]' included-values='in-range' />
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.0vrwzww0gi9eod1fpuf6r0ebp8jv].[none:Region:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.0vrwzww0gi9eod1fpuf6r0ebp8jv].[avg:Profit:qk]' shelf='columns' />
          </shelf-sorts>
          <slices>
            <column>[federated.0vrwzww0gi9eod1fpuf6r0ebp8jv].[avg:Profit:qk]</column>
            <column>[federated.0vrwzww0gi9eod1fpuf6r0ebp8jv].[none:Category:nk]</column>
            <column>[federated.0vrwzww0gi9eod1fpuf6r0ebp8jv].[none:Segment:nk]</column>
            <column>[federated.0vrwzww0gi9eod1fpuf6r0ebp8jv].[none:Ship Mode:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='display' class='0' field='[federated.0vrwzww0gi9eod1fpuf6r0ebp8jv].[avg:Profit:qk]' scope='rows' value='false' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0vrwzww0gi9eod1fpuf6r0ebp8jv].[none:Region:nk]' />
              <text column='[federated.0vrwzww0gi9eod1fpuf6r0ebp8jv].[avg:Profit:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0vrwzww0gi9eod1fpuf6r0ebp8jv].[avg:Profit:qk]</rows>
        <cols>[federated.0vrwzww0gi9eod1fpuf6r0ebp8jv].[none:Region:nk]</cols>
      </table>
      <simple-id uuid='{5F5FCEB7-D403-4111-94CD-35DA2BF93FAC}' />
    </worksheet>
    <worksheet name='Profit'>
      <table>
        <view>
          <datasources>
            <datasource caption='SampleSuperstore' name='federated.0vrwzww0gi9eod1fpuf6r0ebp8jv' />
          </datasources>
          <datasource-dependencies datasource='federated.0vrwzww0gi9eod1fpuf6r0ebp8jv'>
            <column datatype='string' name='[Category]' role='dimension' type='nominal' />
            <column datatype='real' name='[Profit]' role='measure' type='quantitative' />
            <column datatype='string' name='[Region]' role='dimension' type='nominal' />
            <column datatype='string' name='[Segment]' role='dimension' type='nominal' />
            <column datatype='string' name='[Ship Mode]' role='dimension' type='nominal' />
            <column-instance column='[Category]' derivation='None' name='[none:Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Segment]' derivation='None' name='[none:Segment:nk]' pivot='key' type='nominal' />
            <column-instance column='[Ship Mode]' derivation='None' name='[none:Ship Mode:nk]' pivot='key' type='nominal' />
            <column-instance column='[Profit]' derivation='Sum' name='[sum:Profit:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0vrwzww0gi9eod1fpuf6r0ebp8jv].[Action (Region)]'>
            <groupfilter function='level-members' level='[Region]' user:ui-action-filter='[Action1_C7A4041D46CE43FDBEC6D8C501DBB9B2]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0vrwzww0gi9eod1fpuf6r0ebp8jv].[Action (Region)]</column>
            <column>[federated.0vrwzww0gi9eod1fpuf6r0ebp8jv].[none:Category:nk]</column>
            <column>[federated.0vrwzww0gi9eod1fpuf6r0ebp8jv].[none:Segment:nk]</column>
            <column>[federated.0vrwzww0gi9eod1fpuf6r0ebp8jv].[none:Ship Mode:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.0vrwzww0gi9eod1fpuf6r0ebp8jv].[sum:Profit:qk]' />
            </encodings>
            <customized-label>
              <formatted-text>
                <run bold='true' fontname='Tableau Medium' fontsize='15'>Profit</run>
                <run>Ã†&#10;</run>
                <run bold='true' fontname='Tableau Medium' fontsize='15'><![CDATA[<[federated.0vrwzww0gi9eod1fpuf6r0ebp8jv].[sum:Profit:qk]>]]></run>
              </formatted-text>
            </customized-label>
            <style>
              <style-rule element='cell'>
                <format attr='text-align' value='center' />
                <format attr='vertical-align' value='center' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{F4AAB0E3-A083-41D4-B230-C5BF2D48886C}' />
    </worksheet>
    <worksheet name='Profit &amp; Sales by Top 10State'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1' fontcolor='#4e79a7' fontname='Tableau Medium'>Profit and  sales by Top 10 State</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='SampleSuperstore' name='federated.0vrwzww0gi9eod1fpuf6r0ebp8jv' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.0vrwzww0gi9eod1fpuf6r0ebp8jv'>
            <column datatype='string' name='[Category]' role='dimension' type='nominal' />
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='real' name='[Profit]' role='measure' type='quantitative' />
            <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
            <column datatype='string' name='[Segment]' role='dimension' type='nominal' />
            <column datatype='string' name='[Ship Mode]' role='dimension' type='nominal' />
            <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[Category]' derivation='None' name='[none:Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[Segment]' derivation='None' name='[none:Segment:nk]' pivot='key' type='nominal' />
            <column-instance column='[Ship Mode]' derivation='None' name='[none:Ship Mode:nk]' pivot='key' type='nominal' />
            <column-instance column='[State]' derivation='None' name='[none:State:nk]' pivot='key' type='nominal' />
            <column-instance column='[Profit]' derivation='Sum' name='[sum:Profit:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0vrwzww0gi9eod1fpuf6r0ebp8jv].[none:State:nk]'>
            <groupfilter count='10' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='COUNT([Category])' function='order' user:ui-marker='order'>
                <groupfilter function='level-members' level='[none:State:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
              </groupfilter>
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0vrwzww0gi9eod1fpuf6r0ebp8jv].[none:State:nk]</column>
            <column>[federated.0vrwzww0gi9eod1fpuf6r0ebp8jv].[none:Category:nk]</column>
            <column>[federated.0vrwzww0gi9eod1fpuf6r0ebp8jv].[none:Segment:nk]</column>
            <column>[federated.0vrwzww0gi9eod1fpuf6r0ebp8jv].[none:Ship Mode:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0vrwzww0gi9eod1fpuf6r0ebp8jv].[Longitude (generated)]' field-type='quantitative' max='-5206618.2821243927' min='-16689946.97951439' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.0vrwzww0gi9eod1fpuf6r0ebp8jv].[Latitude (generated)]' field-type='quantitative' max='6148285.4796238858' min='3318051.0073440382' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0vrwzww0gi9eod1fpuf6r0ebp8jv].[none:State:nk]' />
              <text column='[federated.0vrwzww0gi9eod1fpuf6r0ebp8jv].[sum:Sales:qk]' />
              <text column='[federated.0vrwzww0gi9eod1fpuf6r0ebp8jv].[sum:Profit:qk]' />
              <lod column='[federated.0vrwzww0gi9eod1fpuf6r0ebp8jv].[none:Country:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0vrwzww0gi9eod1fpuf6r0ebp8jv].[Latitude (generated)]</rows>
        <cols>[federated.0vrwzww0gi9eod1fpuf6r0ebp8jv].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{D72B3411-4C30-4BCE-B9BE-FDB72D44D07C}' />
    </worksheet>
    <worksheet name='Quantity'>
      <table>
        <view>
          <datasources>
            <datasource caption='SampleSuperstore' name='federated.0vrwzww0gi9eod1fpuf6r0ebp8jv' />
          </datasources>
          <datasource-dependencies datasource='federated.0vrwzww0gi9eod1fpuf6r0ebp8jv'>
            <column datatype='string' name='[Category]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Quantity]' role='measure' type='quantitative' />
            <column datatype='string' name='[Region]' role='dimension' type='nominal' />
            <column datatype='string' name='[Segment]' role='dimension' type='nominal' />
            <column datatype='string' name='[Ship Mode]' role='dimension' type='nominal' />
            <column-instance column='[Category]' derivation='None' name='[none:Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Segment]' derivation='None' name='[none:Segment:nk]' pivot='key' type='nominal' />
            <column-instance column='[Ship Mode]' derivation='None' name='[none:Ship Mode:nk]' pivot='key' type='nominal' />
            <column-instance column='[Quantity]' derivation='Sum' name='[sum:Quantity:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0vrwzww0gi9eod1fpuf6r0ebp8jv].[Action (Region)]'>
            <groupfilter function='level-members' level='[Region]' user:ui-action-filter='[Action1_C7A4041D46CE43FDBEC6D8C501DBB9B2]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0vrwzww0gi9eod1fpuf6r0ebp8jv].[Action (Region)]</column>
            <column>[federated.0vrwzww0gi9eod1fpuf6r0ebp8jv].[none:Category:nk]</column>
            <column>[federated.0vrwzww0gi9eod1fpuf6r0ebp8jv].[none:Segment:nk]</column>
            <column>[federated.0vrwzww0gi9eod1fpuf6r0ebp8jv].[none:Ship Mode:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.0vrwzww0gi9eod1fpuf6r0ebp8jv].[sum:Quantity:qk]' />
            </encodings>
            <customized-label>
              <formatted-text>
                <run bold='true' fontname='Tableau Medium' fontsize='15'>Quantity</run>
                <run>Ã†&#10;</run>
                <run bold='true' fontname='Tableau Medium' fontsize='15'><![CDATA[<[federated.0vrwzww0gi9eod1fpuf6r0ebp8jv].[sum:Quantity:qk]>]]></run>
              </formatted-text>
            </customized-label>
            <style>
              <style-rule element='cell'>
                <format attr='text-align' value='center' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{B28B2A01-6775-47F1-B3CE-9E0CF3714CA0}' />
    </worksheet>
    <worksheet name='Sales'>
      <table>
        <view>
          <datasources>
            <datasource caption='SampleSuperstore' name='federated.0vrwzww0gi9eod1fpuf6r0ebp8jv' />
          </datasources>
          <datasource-dependencies datasource='federated.0vrwzww0gi9eod1fpuf6r0ebp8jv'>
            <column datatype='string' name='[Category]' role='dimension' type='nominal' />
            <column datatype='string' name='[Region]' role='dimension' type='nominal' />
            <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
            <column datatype='string' name='[Segment]' role='dimension' type='nominal' />
            <column datatype='string' name='[Ship Mode]' role='dimension' type='nominal' />
            <column-instance column='[Category]' derivation='None' name='[none:Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Segment]' derivation='None' name='[none:Segment:nk]' pivot='key' type='nominal' />
            <column-instance column='[Ship Mode]' derivation='None' name='[none:Ship Mode:nk]' pivot='key' type='nominal' />
            <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0vrwzww0gi9eod1fpuf6r0ebp8jv].[Action (Region)]'>
            <groupfilter function='level-members' level='[Region]' user:ui-action-filter='[Action1_C7A4041D46CE43FDBEC6D8C501DBB9B2]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0vrwzww0gi9eod1fpuf6r0ebp8jv].[Action (Region)]</column>
            <column>[federated.0vrwzww0gi9eod1fpuf6r0ebp8jv].[none:Category:nk]</column>
            <column>[federated.0vrwzww0gi9eod1fpuf6r0ebp8jv].[none:Segment:nk]</column>
            <column>[federated.0vrwzww0gi9eod1fpuf6r0ebp8jv].[none:Ship Mode:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.0vrwzww0gi9eod1fpuf6r0ebp8jv].[sum:Sales:qk]' />
            </encodings>
            <customized-label>
              <formatted-text>
                <run bold='true' fontname='Tableau Medium' fontsize='15'>Total Sales</run>
                <run>Ã†&#10;</run>
                <run bold='true' fontname='Tableau Medium' fontsize='15'><![CDATA[<[federated.0vrwzww0gi9eod1fpuf6r0ebp8jv].[sum:Sales:qk]>]]></run>
                <run>Ã†&#10;&#10;</run>
              </formatted-text>
            </customized-label>
            <style>
              <style-rule element='cell'>
                <format attr='text-align' value='center' />
                <format attr='vertical-align' value='center' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{09C131A3-63FD-458C-960F-01D291A6939A}' />
    </worksheet>
    <worksheet name='Sales by Category'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1' fontcolor='#4e79a7' fontname='Tableau Medium' fontsize='16'>Sales by Category</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='SampleSuperstore' name='federated.0vrwzww0gi9eod1fpuf6r0ebp8jv' />
          </datasources>
          <datasource-dependencies datasource='federated.0vrwzww0gi9eod1fpuf6r0ebp8jv'>
            <column datatype='string' name='[Category]' role='dimension' type='nominal' />
            <column datatype='string' name='[Region]' role='dimension' type='nominal' />
            <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
            <column datatype='string' name='[Segment]' role='dimension' type='nominal' />
            <column datatype='string' name='[Ship Mode]' role='dimension' type='nominal' />
            <column-instance column='[Category]' derivation='None' name='[none:Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Segment]' derivation='None' name='[none:Segment:nk]' pivot='key' type='nominal' />
            <column-instance column='[Ship Mode]' derivation='None' name='[none:Ship Mode:nk]' pivot='key' type='nominal' />
            <column-instance column='[Sales]' derivation='Sum' name='[pcto:sum:Sales:qk:2]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' type='PctTotal' />
            </column-instance>
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0vrwzww0gi9eod1fpuf6r0ebp8jv].[Action (Region)]'>
            <groupfilter function='level-members' level='[Region]' user:ui-action-filter='[Action1_C7A4041D46CE43FDBEC6D8C501DBB9B2]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0vrwzww0gi9eod1fpuf6r0ebp8jv].[Action (Region)]</column>
            <column>[federated.0vrwzww0gi9eod1fpuf6r0ebp8jv].[none:Category:nk]</column>
            <column>[federated.0vrwzww0gi9eod1fpuf6r0ebp8jv].[none:Segment:nk]</column>
            <column>[federated.0vrwzww0gi9eod1fpuf6r0ebp8jv].[none:Ship Mode:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Pie' />
            <encodings>
              <color column='[federated.0vrwzww0gi9eod1fpuf6r0ebp8jv].[none:Category:nk]' />
              <text column='[federated.0vrwzww0gi9eod1fpuf6r0ebp8jv].[pcto:sum:Sales:qk:2]' />
              <text column='[federated.0vrwzww0gi9eod1fpuf6r0ebp8jv].[none:Category:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{EAEF6F0A-B736-4971-96A8-8EBA6F230200}' />
    </worksheet>
    <worksheet name='Sales by Region '>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1' fontcolor='#4e79a7' fontname='Tableau Medium' fontsize='18'>Sales by Region</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='SampleSuperstore' name='federated.0vrwzww0gi9eod1fpuf6r0ebp8jv' />
          </datasources>
          <datasource-dependencies datasource='federated.0vrwzww0gi9eod1fpuf6r0ebp8jv'>
            <column datatype='string' name='[Category]' role='dimension' type='nominal' />
            <column datatype='string' name='[Region]' role='dimension' type='nominal' />
            <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
            <column datatype='string' name='[Segment]' role='dimension' type='nominal' />
            <column datatype='string' name='[Ship Mode]' role='dimension' type='nominal' />
            <column-instance column='[Category]' derivation='None' name='[none:Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Region]' derivation='None' name='[none:Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[Segment]' derivation='None' name='[none:Segment:nk]' pivot='key' type='nominal' />
            <column-instance column='[Ship Mode]' derivation='None' name='[none:Ship Mode:nk]' pivot='key' type='nominal' />
            <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.0vrwzww0gi9eod1fpuf6r0ebp8jv].[none:Region:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.0vrwzww0gi9eod1fpuf6r0ebp8jv].[sum:Sales:qk]' shelf='rows' />
          </shelf-sorts>
          <slices>
            <column>[federated.0vrwzww0gi9eod1fpuf6r0ebp8jv].[none:Category:nk]</column>
            <column>[federated.0vrwzww0gi9eod1fpuf6r0ebp8jv].[none:Segment:nk]</column>
            <column>[federated.0vrwzww0gi9eod1fpuf6r0ebp8jv].[none:Ship Mode:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='display' class='0' field='[federated.0vrwzww0gi9eod1fpuf6r0ebp8jv].[sum:Sales:qk]' scope='cols' value='false' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='rows' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0vrwzww0gi9eod1fpuf6r0ebp8jv].[none:Region:nk]' />
              <text column='[federated.0vrwzww0gi9eod1fpuf6r0ebp8jv].[sum:Sales:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0vrwzww0gi9eod1fpuf6r0ebp8jv].[none:Region:nk]</rows>
        <cols>[federated.0vrwzww0gi9eod1fpuf6r0ebp8jv].[sum:Sales:qk]</cols>
      </table>
      <simple-id uuid='{9869E33B-00B6-41EE-8FB4-5A85BEBA0A65}' />
    </worksheet>
    <worksheet name='Sales by Segment'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1' fontcolor='#4e79a7' fontname='Tableau Medium'>Sales by Segment</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='SampleSuperstore' name='federated.0vrwzww0gi9eod1fpuf6r0ebp8jv' />
          </datasources>
          <datasource-dependencies datasource='federated.0vrwzww0gi9eod1fpuf6r0ebp8jv'>
            <column datatype='string' name='[Category]' role='dimension' type='nominal' />
            <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
            <column datatype='string' name='[Segment]' role='dimension' type='nominal' />
            <column datatype='string' name='[Ship Mode]' role='dimension' type='nominal' />
            <column-instance column='[Category]' derivation='None' name='[none:Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Segment]' derivation='None' name='[none:Segment:nk]' pivot='key' type='nominal' />
            <column-instance column='[Ship Mode]' derivation='None' name='[none:Ship Mode:nk]' pivot='key' type='nominal' />
            <column-instance column='[Sales]' derivation='Sum' name='[pcto:sum:Sales:qk:2]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' type='PctTotal' />
            </column-instance>
            <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <slices>
            <column>[federated.0vrwzww0gi9eod1fpuf6r0ebp8jv].[none:Segment:nk]</column>
            <column>[federated.0vrwzww0gi9eod1fpuf6r0ebp8jv].[none:Category:nk]</column>
            <column>[federated.0vrwzww0gi9eod1fpuf6r0ebp8jv].[none:Ship Mode:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Pie' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.0vrwzww0gi9eod1fpuf6r0ebp8jv].[none:Segment:nk]' />
              <wedge-size column='[federated.0vrwzww0gi9eod1fpuf6r0ebp8jv].[sum:Sales:qk]' />
              <size column='[federated.0vrwzww0gi9eod1fpuf6r0ebp8jv].[sum:Sales:qk]' />
              <text column='[federated.0vrwzww0gi9eod1fpuf6r0ebp8jv].[pcto:sum:Sales:qk:2]' />
              <text column='[federated.0vrwzww0gi9eod1fpuf6r0ebp8jv].[none:Segment:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='1.2853591442108154' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{AC652E20-C571-4F0A-9495-3A2D0836A1C5}' />
    </worksheet>
    <worksheet name='Sales by Ship mode'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1' fontcolor='#4e79a7'>Segment Wise Profit  by Ship Mode</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='SampleSuperstore' name='federated.0vrwzww0gi9eod1fpuf6r0ebp8jv' />
          </datasources>
          <datasource-dependencies datasource='federated.0vrwzww0gi9eod1fpuf6r0ebp8jv'>
            <column datatype='string' name='[Category]' role='dimension' type='nominal' />
            <column datatype='real' name='[Profit]' role='measure' type='quantitative' />
            <column datatype='string' name='[Region]' role='dimension' type='nominal' />
            <column datatype='string' name='[Segment]' role='dimension' type='nominal' />
            <column datatype='string' name='[Ship Mode]' role='dimension' type='nominal' />
            <column-instance column='[Category]' derivation='None' name='[none:Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Segment]' derivation='None' name='[none:Segment:nk]' pivot='key' type='nominal' />
            <column-instance column='[Ship Mode]' derivation='None' name='[none:Ship Mode:nk]' pivot='key' type='nominal' />
            <column-instance column='[Profit]' derivation='Sum' name='[sum:Profit:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0vrwzww0gi9eod1fpuf6r0ebp8jv].[Action (Region)]'>
            <groupfilter function='level-members' level='[Region]' user:ui-action-filter='[Action1_C7A4041D46CE43FDBEC6D8C501DBB9B2]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.0vrwzww0gi9eod1fpuf6r0ebp8jv].[none:Ship Mode:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.0vrwzww0gi9eod1fpuf6r0ebp8jv].[sum:Profit:qk]' shelf='columns' />
          </shelf-sorts>
          <slices>
            <column>[federated.0vrwzww0gi9eod1fpuf6r0ebp8jv].[Action (Region)]</column>
            <column>[federated.0vrwzww0gi9eod1fpuf6r0ebp8jv].[none:Ship Mode:nk]</column>
            <column>[federated.0vrwzww0gi9eod1fpuf6r0ebp8jv].[none:Category:nk]</column>
            <column>[federated.0vrwzww0gi9eod1fpuf6r0ebp8jv].[none:Segment:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0vrwzww0gi9eod1fpuf6r0ebp8jv].[none:Ship Mode:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.0vrwzww0gi9eod1fpuf6r0ebp8jv].[sum:Profit:qk]</rows>
        <cols>([federated.0vrwzww0gi9eod1fpuf6r0ebp8jv].[none:Segment:nk] / [federated.0vrwzww0gi9eod1fpuf6r0ebp8jv].[none:Ship Mode:nk])</cols>
      </table>
      <simple-id uuid='{7B569E03-0E0E-46AB-93B3-224067BE8D7A}' />
    </worksheet>
    <worksheet name='Sales by Sub Category'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1' fontcolor='#4e79a7' fontname='Tableau Medium'>Sales by Sub - Category</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='SampleSuperstore' name='federated.0vrwzww0gi9eod1fpuf6r0ebp8jv' />
          </datasources>
          <datasource-dependencies datasource='federated.0vrwzww0gi9eod1fpuf6r0ebp8jv'>
            <column datatype='string' name='[Category]' role='dimension' type='nominal' />
            <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
            <column datatype='string' name='[Segment]' role='dimension' type='nominal' />
            <column datatype='string' name='[Ship Mode]' role='dimension' type='nominal' />
            <column datatype='string' name='[Sub-Category]' role='dimension' type='nominal' />
            <column-instance column='[Category]' derivation='None' name='[none:Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Segment]' derivation='None' name='[none:Segment:nk]' pivot='key' type='nominal' />
            <column-instance column='[Ship Mode]' derivation='None' name='[none:Ship Mode:nk]' pivot='key' type='nominal' />
            <column-instance column='[Sub-Category]' derivation='None' name='[none:Sub-Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.0vrwzww0gi9eod1fpuf6r0ebp8jv].[none:Sub-Category:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.0vrwzww0gi9eod1fpuf6r0ebp8jv].[sum:Sales:qk]' shelf='columns' />
          </shelf-sorts>
          <slices>
            <column>[federated.0vrwzww0gi9eod1fpuf6r0ebp8jv].[none:Category:nk]</column>
            <column>[federated.0vrwzww0gi9eod1fpuf6r0ebp8jv].[none:Segment:nk]</column>
            <column>[federated.0vrwzww0gi9eod1fpuf6r0ebp8jv].[none:Ship Mode:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0vrwzww0gi9eod1fpuf6r0ebp8jv].[none:Sub-Category:nk]' />
              <text column='[federated.0vrwzww0gi9eod1fpuf6r0ebp8jv].[none:Sub-Category:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0vrwzww0gi9eod1fpuf6r0ebp8jv].[sum:Sales:qk]</rows>
        <cols>[federated.0vrwzww0gi9eod1fpuf6r0ebp8jv].[none:Sub-Category:nk]</cols>
      </table>
      <simple-id uuid='{3112C24F-9227-49C1-AB40-9049556F42EB}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard _.fcp.AccessibleZoneTabOrder.true...enable-sort-zone-taborder='true' name='Sample Superstore Dashboard'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1' fontcolor='#4e79a7' fontname='Tableau Bold' fontsize='20'>Sample Superstore Dashboard</run>
          </formatted-text>
        </title>
      </layout-options>
      <style />
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <datasources>
        <datasource caption='SampleSuperstore' name='federated.0vrwzww0gi9eod1fpuf6r0ebp8jv' />
      </datasources>
      <datasource-dependencies datasource='federated.0vrwzww0gi9eod1fpuf6r0ebp8jv'>
        <column datatype='string' name='[Category]' role='dimension' type='nominal' />
        <column datatype='string' name='[Segment]' role='dimension' type='nominal' />
        <column datatype='string' name='[Ship Mode]' role='dimension' type='nominal' />
        <column-instance column='[Category]' derivation='None' name='[none:Category:nk]' pivot='key' type='nominal' />
        <column-instance column='[Segment]' derivation='None' name='[none:Segment:nk]' pivot='key' type='nominal' />
        <column-instance column='[Ship Mode]' derivation='None' name='[none:Ship Mode:nk]' pivot='key' type='nominal' />
      </datasource-dependencies>
      <zones>
        <zone h='100000' id='4' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='98000' id='5' param='vert' type-v2='layout-flow' w='98400' x='800' y='1000'>
            <zone fixed-size='38' h='5750' id='7' is-fixed='true' type-v2='title' w='98400' x='800' y='1000'>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='4' />
              </zone-style>
            </zone>
            <zone h='92250' id='6' type-v2='layout-basic' w='98400' x='800' y='6750' />
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
        <zone h='13125' id='10' name='Profit' show-title='false' w='17700' x='19500' y='7000' />
        <zone h='13250' id='11' name='Quantity' show-title='false' w='17900' x='36800' y='7000' />
        <zone h='13250' id='15' name='Sales' show-title='false' w='20200' x='-700' y='7000' />
        <zone h='22125' id='16' param='horz' type-v2='layout-flow' w='99600' x='400' y='20125' />
        <zone h='27875' id='17' param='horz' type-v2='layout-flow' w='99700' x='500' y='78750' />
        <zone h='21500' id='19' name='Sales by Category' w='30200' x='37700' y='20375' />
        <zone h='36750' id='20' name='Sales by Ship mode' w='46900' x='52300' y='42125' />
        <zone h='21375' id='21' name='Sales by Region ' w='31600' x='300' y='20375' />
        <zone h='22000' id='22' name='Sales by Segment' w='31500' x='68400' y='20000' />
        <zone h='36750' id='23' name='Profit &amp; Sales by Top 10State' w='51800' x='500' y='42375' />
        <zone h='26875' id='24' name='Sales by Sub Category' w='60900' x='500' y='79375' />
        <zone h='27125' id='25' name='Avg Profit by Region' w='38400' x='61400' y='79250' />
        <zone h='12750' id='86' mode='dropdown' name='Sales by Category' param='[federated.0vrwzww0gi9eod1fpuf6r0ebp8jv].[none:Category:nk]' type-v2='filter' values='database' w='12700' x='54800' y='7000' />
        <zone h='12875' id='87' mode='dropdown' name='Sales by Segment' param='[federated.0vrwzww0gi9eod1fpuf6r0ebp8jv].[none:Segment:nk]' type-v2='filter' values='database' w='15600' x='67300' y='7125' />
        <zone h='12750' id='122' mode='dropdown' name='Sales by Ship mode' param='[federated.0vrwzww0gi9eod1fpuf6r0ebp8jv].[none:Ship Mode:nk]' type-v2='filter' values='database' w='16000' x='83400' y='6625' />
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <layout-options>
            <title>
              <formatted-text>
                <run bold='true' fontalignment='1' fontcolor='#4e79a7' fontname='Tableau Bold' fontsize='20'>Sample Superstore Dashboard</run>
              </formatted-text>
            </title>
          </layout-options>
          <size maxheight='2150' minheight='2150' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='136' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='98000' id='135' param='vert' type-v2='layout-flow' w='98400' x='800' y='1000'>
                <zone fixed-size='38' h='5750' id='7' type-v2='title' w='98400' x='800' y='1000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='106' h='13250' id='15' is-fixed='true' name='Sales' show-title='false' w='20200' x='-700' y='7000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='105' h='13125' id='10' is-fixed='true' name='Profit' show-title='false' w='17700' x='19500' y='7000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='106' h='13250' id='11' is-fixed='true' name='Quantity' show-title='false' w='17900' x='36800' y='7000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='12875' id='87' mode='dropdown' name='Sales by Segment' param='[federated.0vrwzww0gi9eod1fpuf6r0ebp8jv].[none:Segment:nk]' type-v2='filter' values='database' w='15600' x='67300' y='7125'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='176' h='22000' id='22' is-fixed='true' name='Sales by Segment' w='31500' x='68400' y='20000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='171' h='21375' id='21' is-fixed='true' name='Sales by Region ' w='31600' x='300' y='20375'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='12750' id='86' mode='dropdown' name='Sales by Category' param='[federated.0vrwzww0gi9eod1fpuf6r0ebp8jv].[none:Category:nk]' type-v2='filter' values='database' w='12700' x='54800' y='7000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='172' h='21500' id='19' is-fixed='true' name='Sales by Category' w='30200' x='37700' y='20375'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='12750' id='122' mode='dropdown' name='Sales by Ship mode' param='[federated.0vrwzww0gi9eod1fpuf6r0ebp8jv].[none:Ship Mode:nk]' type-v2='filter' values='database' w='16000' x='83400' y='6625'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='36750' id='20' is-fixed='true' name='Sales by Ship mode' w='46900' x='52300' y='42125'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='36750' id='23' is-fixed='true' name='Profit &amp; Sales by Top 10State' w='51800' x='500' y='42375'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='217' h='27125' id='25' is-fixed='true' name='Avg Profit by Region' w='38400' x='61400' y='79250'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='215' h='26875' id='24' is-fixed='true' name='Sales by Sub Category' w='60900' x='500' y='79375'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{F240D73A-02B5-4033-9DBA-E02B9D9BE59A}' />
    </dashboard>
  </dashboards>
  <windows saved-dpi-scale-factor='1.25' source-height='37'>
    <window class='worksheet' name='Sales by Region '>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0vrwzww0gi9eod1fpuf6r0ebp8jv].[none:Region:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0vrwzww0gi9eod1fpuf6r0ebp8jv].[none:Region:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{07CE8856-1758-48A3-A274-7F189495108F}' />
    </window>
    <window class='worksheet' name='Sales by Category'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0vrwzww0gi9eod1fpuf6r0ebp8jv].[none:Category:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
      </viewpoint>
      <simple-id uuid='{2112926E-D4F8-4DDF-AD84-DB87B879CB77}' />
    </window>
    <window class='worksheet' name='Sales by Sub Category'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0vrwzww0gi9eod1fpuf6r0ebp8jv].[none:Sub-Category:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
      </viewpoint>
      <simple-id uuid='{83C984AD-09FF-48A5-805D-D57B3232A6A1}' />
    </window>
    <window class='worksheet' name='Profit &amp; Sales by Top 10State'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0vrwzww0gi9eod1fpuf6r0ebp8jv].[none:State:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0vrwzww0gi9eod1fpuf6r0ebp8jv].[none:Category:nk]</field>
            <field>[federated.0vrwzww0gi9eod1fpuf6r0ebp8jv].[none:City:nk]</field>
            <field>[federated.0vrwzww0gi9eod1fpuf6r0ebp8jv].[none:Country:nk]</field>
            <field>[federated.0vrwzww0gi9eod1fpuf6r0ebp8jv].[none:Ship Mode:nk]</field>
            <field>[federated.0vrwzww0gi9eod1fpuf6r0ebp8jv].[none:State:nk]</field>
            <field>[federated.0vrwzww0gi9eod1fpuf6r0ebp8jv].[sum:Profit:qk]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='1' />
      </viewpoint>
      <simple-id uuid='{2CA71538-C44A-4C62-831B-001ED99E7C19}' />
    </window>
    <window class='worksheet' name='Sales by Ship mode'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0vrwzww0gi9eod1fpuf6r0ebp8jv].[none:Ship Mode:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0vrwzww0gi9eod1fpuf6r0ebp8jv].[none:Ship Mode:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{0E78B16D-2DBC-4D75-8865-17B18AC4813F}' />
    </window>
    <window class='worksheet' name='Sales by Segment'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0vrwzww0gi9eod1fpuf6r0ebp8jv].[none:Segment:nk]' type='color' />
            <card pane-specification-id='0' param='[federated.0vrwzww0gi9eod1fpuf6r0ebp8jv].[sum:Sales:qk]' type='size' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.0vrwzww0gi9eod1fpuf6r0ebp8jv].[none:Segment:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{6D90BF0C-605F-447C-867B-8D1A11E258BE}' />
    </window>
    <window class='worksheet' name='Avg Profit by Region'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.0vrwzww0gi9eod1fpuf6r0ebp8jv].[avg:Profit:qk]' show-domain='false' show-null-ctrls='false' type='filter' />
            <card pane-specification-id='0' param='[federated.0vrwzww0gi9eod1fpuf6r0ebp8jv].[none:Region:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.0vrwzww0gi9eod1fpuf6r0ebp8jv].[none:Region:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{C447D35D-47AD-468E-9E14-BF3F633FF07B}' />
    </window>
    <window class='worksheet' name='Sales'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
      </viewpoint>
      <simple-id uuid='{FC2B6768-71FD-428E-A05C-069619239EC3}' />
    </window>
    <window class='worksheet' name='Profit'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <selection-collection>
          <tuple-selection>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields />
                  <y-fields />
                </pane-descriptor>
                <columns>
                  <field>[federated.0vrwzww0gi9eod1fpuf6r0ebp8jv].[sum:Profit:qk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>202352.99310000055</value>
              </tuple>
            </tuple-reference>
          </tuple-selection>
        </selection-collection>
      </viewpoint>
      <simple-id uuid='{7BD4212B-B64E-48DD-A71E-BC62689A7F01}' />
    </window>
    <window class='worksheet' name='Quantity'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
      </viewpoint>
      <simple-id uuid='{D4B2BBF2-21E5-4D73-999B-A50F5A995AD6}' />
    </window>
    <window class='dashboard' maximized='true' name='Sample Superstore Dashboard'>
      <viewpoints>
        <viewpoint name='Avg Profit by Region'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Profit'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Profit &amp; Sales by Top 10State'>
          <zoom type='entire-view' />
          <default-map-tool-selection tool='1' />
        </viewpoint>
        <viewpoint name='Quantity'>
          <zoom type='entire-view' />
          <selection-collection>
            <tuple-selection>
              <tuple-reference>
                <tuple-descriptor>
                  <pane-descriptor>
                    <x-fields />
                    <y-fields />
                  </pane-descriptor>
                  <columns>
                    <field>[federated.0vrwzww0gi9eod1fpuf6r0ebp8jv].[sum:Profit:qk]</field>
                    <field>[federated.0vrwzww0gi9eod1fpuf6r0ebp8jv].[sum:Quantity:qk]</field>
                    <field>[federated.0vrwzww0gi9eod1fpuf6r0ebp8jv].[sum:Sales:qk]</field>
                  </columns>
                </tuple-descriptor>
                <tuple>
                  <value>202352.99310000055</value>
                  <value>26505</value>
                  <value>1613479.5318999721</value>
                </tuple>
              </tuple-reference>
            </tuple-selection>
          </selection-collection>
        </viewpoint>
        <viewpoint name='Sales'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Sales by Category'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Sales by Region '>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Sales by Segment'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Sales by Ship mode'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Sales by Sub Category'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='-1' />
      <simple-id uuid='{235A067C-858B-4EA3-9EB9-89D3AE6FE5F4}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Avg Profit by Region' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAABJ0AAASdAHeZh94
      AAAGGUlEQVR4nO3dT08UBxzG8WdmdgUWVxSERAzKHy0x0UtJ20P10Kbx5DvwBfTsm/Ed2JOX
      ntuLpzZ6MPEPiiECylK0urKuwK7DzPbQltYGhW0WZuD5fm5LNptfJvPN7BDmR9BqtVoCTIVZ
      DwBkaTOAJEmynAPIBFcAWCMAWCMAWCMAWCMAWCMAWCMAWCMAWCtkPcC/3bt3T3Nzc7py5Ypu
      3Lihq1evqtFo6M6dO2o0GgrDP3u9fPlyxpPioMjVFWBwcFDValXT09Mql8tqtVrq7e3VxMSE
      zp49q1qtplqtlvWYOEByFUClUlGxWFSSJHr+/LkWFha0srKi2dlZTUxMKI5jxXGc9Zg4QIK/
      /xo0jmMFQZD1PMCe2rwHCMNQURR98s1praL07dKuD5W1wsgXWY+APdLWTXA8/aPe/3p9t2bJ
      jfK1B1mPgD2Sq3sAYK8RAKwRAKwRAKwRAKwRAKwRAKwRAKwRAKwRAKwRAKwRAKzl6okwtKde
      r+v27dsKw1DValVTU1MaHR3V3Nyc7t69q9HRUS0vL+vUqVM6f/581uPmEleAfaxcLkuSSqWS
      pqamNn8+Njam/v5+lUollUolVSqVrEbMPa4A+1i1WlUQBIqiSPfv31dXV5dKpZJWVlY0Pz+v
      06dPq9lsfhAHPrT5RFiSJNs+ENP85TrPA+BA4Qqwy36ancl6hF033j+gif7jWY/xvxDALvt5
      9knWI+y67858RgDAfnDr1i2laaooilSv1/ktELyMj4+ru7tbb9680eLiIgHAR5Ikunnzpnp6
      ejQ+Pq6hoSG+AsFHFEW6du3a5usLFy78E0CaptruP6amabp70+XIxsZG1iPsK2maduyYxQsL
      SlfXOvJZO9HWYqwk9PjGVChwYWxHGIYdO2avb/yg5vSjjnzWTnic0cBHEACsEQCsEQCsEQCs
      EQCsEQCsEQCsEQCsEQCsEQCsEQCsEQCsEQCsEQCsEQCsEQCsEQCsEQCsEQCsEQCsEQCsEQCs
      sRhrCyzGak8nF2Ntdw52GouxtsBirPZ0cjFWEAQd+Zyd8jijgY8gAFgjAFgjAFgjAFgjAFgj
      AFgjAFgjAFgjAFgjAFgjAFgjAFgjAFgjAFgjAFgjAFgjAFgjAFgjAFgjAFgjAFhjL9AW2AvU
      HvYCHTDsBWoPe4GAfYoAYI0AYI0AYI0AYI0AYI0AYI0AYI0AYI0AYI0AYI0AYI0AYI0AYI0A
      YI0AYI0AYI0AYI0AYI0AYI0AYI0AYI29QFtgL1B72At0wLAXqD3sBQL2KQKANQKANQKANQKA
      NQKANQKANQKANQKANQKANQKANQKANQKANQKANQKANQKANQKANQKANQKANQKANQKANQKANQKA
      NRZjbYHFWO1hMdYBw2Ks9rAYC9inCADWCADWCADWCADWCADWCADWCADWCADWCADWCADWCADW
      CADWCADWCADWCADWCADWCADWCADWCADWCADWCADWCADWWIy1BRZjtYfFWAcMi7Haw2IsYJ8i
      AFgjAFgjAFgjAFgjAFgjAFgjAFgjAFgjAFgjAFgjAFgjAFgjAFgjAFgjAFgjAFgjAFgjAFgj
      AFgjAFgjAFj7YC/QdoLhz1X48vtdHSgPkiTZ9j2tVmtHKzy+HTvTiZFybbTvWMeOWc/FiypO
      TnZqtG0Frb82EaVpqtBk708ncLzal8djtjlNXgZbq69oZmZG9bVm1qN8Um6O19qamqtvtf4+
      0draWtbjfFIejtmr5Yp+r9Y2X+duBdrLak2Tk5NS0tTM48caOnFCLyoVHRvo08MHT3Xpm0sq
      Zn8cc2NpaUnFgtQKerQRr+tQ1FLx8IAatZcqlY/pwYOH+urrSzrcXcx61ByItVB5pXPnjml5
      6ZneNXN4E5zGDc3MzOj16xVtKNDi4jMpCBUe6tLIyAgn/38cCgLFQVHp+m8q9PRofqGq1dV3
      arWkRKFGRkY4+TcVdGZsWI+ePFX9XVPhRjN/ARzt65MkhVGkMAg1cLRfQRioUChJ6bpij/28
      O3byxIC6uo+oq/u4hoeHdXL4iEqlXgVBoCgqqLsgrTbirMfMiUQvXrzS4OBxlQ93KS106Q+0
      0blTL6+ZoAAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Profit' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAABJ0AAASdAHeZh94
      AAAF4ElEQVR4nO3a2W9UVQDH8d8MnY6tbZnShQpIpYgs1rIom0FAQ4zw4EaUoCaoD5r4D5Co
      IYQYVDQaMZIoGgVFNASN2ERQEIigEaSAJSC2FLCUpQvdh5nOtNcHo0kTH3yybX7fz9O9yT0n
      5z58c3JzbigIgkCAqfBALwAYSBl/X+xu6BzIdQADgh0A1ggA1ggA1ggA1ggA1ggA1ggA1ggA
      1ggA1ggA1ggA1ggA1ggA1ggA1ggA1ggA1ggA1ggA1ggA1ggA1ggA1ggA1ggA1ggA1ggA1ggA
      1ggA1ggA1ggA1ggA1ggA1ggA1ggA1ggA1ggA1ggA1ggA1ggA1ggA1ggA1ggA1ggA1ggA1ggA
      1ggA1ggA1ggA1ggA1ggA1ggA1ggA1ggA1ggA1ggA1ggA1ggA1ggA1ggA1ggA1ggA1ggA1ggA
      1ggA1ggA1ggA1ggA1ggA1ggA1ggA1ggA1ggA1ggA1ggA1ggA1ggA1ggA1ggA1ggA1ggA1ggA
      1ggA1ggA1ggA1ggA1ggA1ggA1ggA1ggA1jIGegHAf5WId2vHe+sVCodVMe9uTZwx61+fC4JA
      29a/qhHFJZKkuUse1IXa0yq7bZoimdF+z7IDYMhIp1K6dLZW8x9cpq/efUtXr1xSfc1vqj1e
      pZ5EQsd/+F6tjZd17lS1zp+s1rhbpypWNFLdne2q/OAdHdpVqVRPst+cBIAhJRGPq/b4EWVd
      n6Mr589q62tr9PvRw/r6/bfVWH9OH7+8Sr2ptCQpFA6pau8upXt6/roPhSSF+s1HABhaQlJ2
      3nA9teoVhcJhTZ51pxaveEbNFxt0x6IlCoXDKrhhtK4fHlNZ+TRJUl5BkXLzR6h87nxlRCL9
      piMADBnhcEglpWWavmCRcmL5imRGlV9colAopIVLl+vzN9dq0u2zlZ2bq9z8AklSTmyEwuGQ
      Jt4+R1vWrVYi3t1vzlAQBIEk7W7o/P/fCBhg7ACwRgCwxjkABrWutlbV/lqlgpJRuvGWyWq9
      clnnfzuhCdNnKisnV+dOVauzpUWTZs5RNCtbkvTH6ZNqvnhBYydOUeGoMTrx0w9KXosrv3ik
      brhpvGqOHVEkmqkJ02ayA2BwO/j1dsU7O7T9ndfV1FCvTWtfUFtzo7asW63G+nOqPrBPDXU1
      +mbzxn/G1Bz7RalkQpteel7pVI92bt6ooK9PQRCooa5GXW1XdWz/Hh3+tpIAMLjd+/jTGlU2
      QeHwMHW0NKto9FgteHi5El1dihWN1OIVzyp5La5YYdE/Y0onl+v0kUOadMccJeLdutbVofqa
      U4pkRnVzxQw1X7ygtqZGja+YQQAY3Kr2fac9n23S4ytXKycWUyqZkCT1ptNKp1L6cM1KlZSW
      af5DyyT99RvEmPG36O5Hn9CZE8c0bFiGnnttg6bedY++3PCGgiDQvAce0fiKaTp56CDfABjc
      9n+xVcVjSrV32ydauPQx9abT2rz2RZVOKVdd9VG1Nzep4cxp/ViZUnZunvKLS7Rv+6fKzs1T
      9LostTU3avfWjxT0BRpXPlUHdmzTxbpatTVd0ez77uccAINba+Nl9fX2SZKGFxRKkjpaWxQr
      LFZPMqHu9nZJUiQa1c87d2jR8icV72hX8lpceQVFyohE1NXeplQyqVhhkfr6etXe0qzM6HXK
      ieUTALzxDQBrBABrBABrBABrBABrBABrBABrBABrBABrBABrBABrBABrBABrBABrBABrBABr
      BABrBABrBABrBABrBABrBABrBABrBABrBABrBABrBABrBABrBABrBABrBABrBABrBABrBABr
      BABrBABrBABrBABrBABrBABrBABrBABrBABrBABrBABrBABrBABrBABrBABrBABrBABrBABr
      BABrBABrBABrBABrBABrBABrBABrBABrBABrBABrBABrBABrBABrBABrBABrBABrBABrBABr
      BABrBABrBABrBABrBABrBABrBABrBABrBABrBABrBABrBABrBABrBABrBABrBABrfwJ3nWTa
      5vgHYgAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Profit &amp; Sales by Top 10State' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Quantity' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAABJ0AAASdAHeZh94
      AAAF6klEQVR4nO3ZvWtTexzH8U9iCLZpbYgt9aGIDx3apYpThjq4NFIQ/AfEQcFNQbDipCJ0
      EERUVCwOVUomJ8FHEIuCUzE+gBLQRLG10RZtGlPTp3PuVnC53Mu90Mrn/YIzHPj+Dr8zvDn8
      OJEwDEMBpqLLvQFgOREArBEArBEArBEArBEArBEArBEArBEArBEArBEArBEArBEArBEArBEA
      rBEArBEArBEArBEArBEArBEArBEArBEArBEArBEArBEArBEArBEArBEArBEArBEArBEArBEA
      rBEArBEArBEArBEArBEArBEArBEArBEArBEArBEArBEArBEArBEArBEArBEArBEArBEArBEA
      rBEArBEArBEArBEArBEArBEArBEArBEArBEArBEArBEArBEArBEArBEArBEArBEArBEArBEA
      rBEArBEArBEArBEArBEArBEArBEArBEArBEArBEArBEArBEArBEArBEArBEArBEArBEArBEA
      rBEArBEArBEArBEAVqxfv35pYGBA/f39ev/+/b9a++PHD+VyOUnS0NCQxsbGNDIyokql8tvc
      qtOnT5/+vzYM/J8GBgYUjUa1e/dunTlzRplMRi9fvlQqldKLFy+UTCb15MkTffv2TW1tbXr6
      9KkKhYKi0aiePXumbDarTZs2KRqNqrGxUefOnVO1WlUsFtP09LTi8ThfAKxcb968UW9vr3bs
      2KFEIqFCoaBsNqupqSlls1mNjo6qUCjo4sWLyufzunLlij5+/Kjr168rEoksXY8fP1a5XJYk
      RSIRhWGoq1evanh4mACwcm3cuFHv3r1TuVxWuVxWU1OTgiDQ/Py8JCmXy2l2dlYNDQ2qVqta
      vXq19uzZoyAI1NnZqXXr1mn79u2SpGQyqQ0bNqi7u1tdXV2an5/XvXv3CAAr16FDh3T37l0d
      PnxYO3fuVGtrq6rVqm7cuKFUKqVkMqm3b9+qrq5O8Xhczc3NWrVqlZLJpNra2vT161fdunVL
      yWRSsVhM6XRa/f39KpVK6u3tVSKRUCQMw3C5XxT4O7OzsxoeHtauXbtUX1//n583Njams2fP
      6uDBgwQAP3Nzc5qenlZzczMBwFtsuTcA/BPj4+PK5XLq6OjQ1q1bNTExoZGREXV0dGjLli2S
      pO/fv+v58+eKRCLq6enRxMSEXr9+rXQ6rTVr1ujhw4daXFzUtm3b1NnZKYkfYfhD3Lx5UzMz
      M+rr61O5XNbx48f18+dPFYvFpZlcLqdPnz4pCALVajUdO3ZMpVJJJ06c0NTUlAYHBxUEgYIg
      WFpDAPgj9PX1qaWlRY2Njfrw4YPK5bIePXqk0dHRpZnx8XEVi0XVajV9/vxZmzdv1oEDB1Sp
      VFQsFjUzM6N8Pv/bQZoA8EcYHBzU/fv3df78ecXjcbW3t+vy5cu6c+fO0szevXt15MgRPXjw
      QIVCQbVaTWEYamFhQe3t7bp27Zq6urp06dKlpTUcgrHiLSwsqKenR93d3YrFYjp69KhOnjyp
      RCKhpqYmZTIZvXr1SvX19crn8yoWi7pw4YJOnTqleDyutWvXKpPJ6Pbt26pUKkqn09q/f78k
      AsAfIAgCffnyZel+/fr1Wlxc1OTkpFpbWzU0NKR9+/apoaFBpVJJqVRKdXV1mpubW5qJRqOa
      nJxUGIZqaWlRJBKRRAAwxxkA1ggA1ggA1ggA1ggA1ggA1ggA1ggA1ggA1ggA1ggA1ggA1ggA
      1ggA1ggA1ggA1ggA1ggA1ggA1ggA1ggA1ggA1ggA1ggA1ggA1ggA1ggA1ggA1ggA1ggA1ggA
      1ggA1ggA1ggA1ggA1ggA1ggA1ggA1ggA1ggA1ggA1ggA1ggA1ggA1ggA1ggA1ggA1ggA1ggA
      1ggA1ggA1ggA1ggA1ggA1ggA1ggA1ggA1ggA1ggA1ggA1ggA1ggA1ggA1ggA1ggA1ggA1ggA
      1ggA1ggA1ggA1ggA1ggA1ggA1ggA1ggA1ggA1ggA1ggA1ggA1ggA1ggA1ggA1ggA1ggA1ggA
      1ggA1v4CPo6RnBYcozEAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Sales' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAABJ0AAASdAHeZh94
      AAAGLElEQVR4nO3av2tT+x/H8VeibaWtP1FErcTSYqtSLS4OgtDJoS52KQ5dKvgPiA6Ki5Mi
      iDgWikNBHaw4RETrYgi2dQhCrWkVqrYR0iVtEqFpfpxzh8stt/d+4fudvgZezwec5ZNzkhzI
      k/POSSJhGIYCTEV/9xsAficCgDUCgDUCgDUCgDUCgDUCgDUCgDUCgDUCgDUCgDUCgDUCgDUC
      gDUCgDUCgDUCgDUCgDUCgDUCgDUCgDUCgDUCgDUCgDUCgDUCgDUCgDUCgDUCgDUCgDUCgDUC
      gDUCgDUCgDUCgDUCgDUCgDUCgDUCgDUCgDUCgDUCgDUCgDUCgDUCgDUCgDUCgDUCgDUCgDUC
      gDUCgDUCgDUCgDUCgDUCgDUCgDUCgDUCgDUCgDUCgDUCgDUCgDUCgDUCgDUCgDUCgDUCgDUC
      gDUCgDUCgDUCgDUCgDUCgDUCgDUCgDUCgDUCgDUCgDUCgDUCgDUCgDUCgDUCgDUCgDUCgDUC
      gDUCgDUCQN2oVquanp7e2H79+rXp8SAIFATBv477+fOnEomEJCkMQ33//l2pVEqVSmXTfuVy
      WePj45vWCAB1IwgCzc7O6tatW0qlUlpbW1MQBKrVagrDUG/fvtXIyMhGCNVqVWEYKpvNanJy
      UpL0/v173bt3T8lkUslkUmEYqlqtKggClctlxePxjdeq1Wra+jtPGPi7xsZGDQ8P682bNxoa
      GlK5XNbly5dVrVY1NDSkFy9eKJPJqK2tTV++fNGnT5/U2dmp8+fPbzzH+vq6SqWSTp48qXPn
      zun58+eamJhQpVLR/fv3JUlLS0u6efOmwjAkANSvqakpnT17VhcuXNDt27c1MDCghYUF9ff3
      K5vN6vTp00omk5sC6Ovr0/79+zU2NqaFhQUdOHBAx48f1+vXr1UqlSRJiURCe/bsUUNDAyMQ
      6texY8f07t07PXz4UL29vdq+fbuSyaSmpqb06tWrf834khSPx/Xy5UtVKhW1trYqHo9vjEB/
      6e7uVrFY1JEjRxQJwzD8f54U8N+k02kdPXpUW7Zs0fLysnK5nLq7uyVJ8/Pz2r17tyqViqLR
      qAqFgg4dOqTV1VUdPnxYQRBobm5OjY2N6ujo0MrKilZWVlStVtXe3q5v376pq6tLmUxGuVyO
      AOCNEQjWCADWuAuEujM7O6vHjx8rFovpypUrG+ujo6PK5/M6ePCgBgYGNDo6qkQioSdPniiV
      SunDhw+an5/XjRs3tG/fPklSJpPR9evXderUKV28eFFjY2Nqbm5WT0+PWlpauAKg/rS1tenM
      mTOb1kqlkp49e6bFxUXl83lFo1ENDg5qfX1dktTb26umpiZt3bpVLS0tG8eNjIxocHBQktTQ
      0KBisahSqaRoNKrx8XECQP3ZuXOnIpHIprUgCNTc3Ky7d+9qcnJSuVxOra2tG/tFIhH19PSo
      UChoeXlZkjQ3N6d0Oq2PHz/q8+fPSqfT2rVrl7q6ujQ/P88PYahP09PTSiQSKhaLG6NNf3+/
      Ojo69ODBA1UqFQVBoEePHml1dVVPnz5VtVpVsVhUoVBQGIa6c+eOLl26pGvXrunr16/K5/Pa
      tm2blpaWFASB9u7dq76+Pm6Dov4sLi4qm81Kknbs2KF4PK6rV6+qVqtpZmZG7e3tampq0szM
      jKQ//0LR2dmpubk5xWIxra2taWJiQsPDw4pEIioUCsrlcorFYvrx44eKxaJOnDihSCRCAKhv
      YRgqDENFo//7tP7XR/qfY9R/QgCwxpdgWCMAWCMAWCMAWCMAWCMAWCMAWCMAWCMAWCMAWCMA
      WCMAWCMAWCMAWCMAWCMAWCMAWCMAWCMAWCMAWCMAWCMAWCMAWCMAWCMAWCMAWCMAWCMAWCMA
      WCMAWCMAWCMAWCMAWCMAWCMAWCMAWCMAWCMAWCMAWCMAWCMAWCMAWCMAWCMAWCMAWCMAWCMA
      WCMAWCMAWCMAWCMAWCMAWCMAWCMAWCMAWCMAWCMAWCMAWCMAWCMAWCMAWCMAWCMAWCMAWCMA
      WCMAWCMAWCMAWCMAWCMAWCMAWCMAWCMAWCMAWCMAWCMAWCMAWCMAWCMAWCMAWCMAWCMAWCMA
      WCMAWCMAWCMAWCMAWCMAWPsDPPrr/fRvmDUAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Sales by Category' width='192'>
      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
    </thumbnail>
    <thumbnail height='84' name='Sales by Region ' width='192'>
      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
      dDScUf4AAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Sales by Segment' width='192'>
      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
      RK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Sales by Ship mode' width='192'>
      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
      //kVAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Sales by Sub Category' width='192'>
      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
      AABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Sample Superstore Dashboard' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAABJ0AAASdAHeZh94
      AAAgAElEQVR4nOy9eXhcxZW4/fa+qbul1tbaLcmSbHnBtrzi3cHGQNgSSHASCJAEMiEMSybk
      gyS/MHmA8cwAMckkJEBYQjIMCWtsMDZ431fJsvZ931rqVu973+8PudstWbZlW7IM6H0eP1bf
      W7eqbnedqnNOnaoSCYIgMMEEX1LE412BCSYYTyYEYIIvNRMCMMGXmgkBGGO6TP109bvHuxpX
      ECEqG3rwBKOu+P2cbOolNIqljPR7nxCAU/i9Xv728VF+8cp2Nrx3hG6Hf1Ty/WTXCT452XXO
      NFV1bfzHGzv51Wu72VzSNirlno2N246zraLnkvPZc6iCn7+8nV+8soPXPq3A4Que/yEAfKx/
      ZTsmz+krfoeNX7x+gNH5xgcYyfcOIB3FMj/XbN1zktJuH99eOY2ObjNOTxBr0Mu+sjbsvhDz
      Z2SRnaBh675y4hLiaGy3MHdaBk3NXbhFCq6bm0V5TQtWvwSLxUqSMZEFeYmDyqht6OB4k4WZ
      UzKYmqobuOhz8/RfDvDtry8iQS7QYfND0Mc/dtZy/Ypp9LR10eKExdk6/nGolSlGFQ0mD2vm
      56JVSM7I8+jJRhSxsfS09zB3Tj51NU3UdjtJS00gN1bCrpPtKNrceN0eri/KpKahg+ImMwU5
      acyaFEdlbRs2FAhOK5k5maiCHnacaCUuIY4V01MRnXqXXrMdkUrDbQsy2LTzJOt73Ty1roiG
      lm6O15uQKZVcU5SDRgb7SxppsbjJyTQyf3IMAG0dJg609rBgVg7GU5meqGymtc/LmnkD79bQ
      1MWRhl5yJ6UwNycep8PFvrJWzK4As6dmUJCiY9eRatIzUqho6OG6qydTV9dOaauVDquX1OTz
      /+4TI8ApYlQyOrrNVLX3M2taNjkJSuqaumi1uDGbzPzyjQOEgK37K9h8rIX6pk5++eou2ixu
      3tp4kPIeD2XVrfxtewUWu5vn3txJde/pbq6lqY1f/98xvD4fz7y6nXZHYOCGWIxGIeJoZQc+
      kYwb5k+CoJ93tlXgCkJjSxe7K7oIetz836elHKo3c7y0jt9vLh82z2Nljbz03kH+fqCB2tpW
      nt9UTkgQOFZzZm9YX9vEk28dxeMPsOHN7RxpsVFV185fPz7Cy59WY3O4+PkfP6PT7uOfW4+w
      +WT3oOf1Og2z8lL58Y2zOFnegjUI+0ubcAcEDh6r5vWdtZSerOPl7bWEQiGO156uw66SJmoa
      Onjts6qBC34PxQ0WjpbU8sctlbQ0tfGLNw/i9gd58a2d7K230NJuorbbidNm5xev7MYVgt1H
      anjh7X1sLe2gtaWdX/31EA5vgD6bh5EwIQCnWH71DB68rpDm5k4efP4jSjscJMVrsVsdtPQ5
      sdvdkSH6hmUzWDMrjZTUJO669iqMWjE+/4AKMGvaJO66vog5aWoaumyR/EtqOoiL0yCTyYiV
      C1S0WAZuSBWsf2ANubFS/vLhQZ58+/jZKylTcs8Ns7hzVQENHf1nzTPemMTvH17LZGMMyoCX
      7SUt6DQqjCmJ5CVrmF6QwfVFmRyv7mTx3AK+e+0srpuVwpGqTgAkai3/88h16PwOegISDGoZ
      ibEaTtR1D1stlVIGoSD+kEBmko761l6sniBmm5vEeB0Bp53dJ9vR69SRZ759/TxWTU/BHwxG
      3u3uG2Zx16op1LWbKanpYO7sPO6+9ipuKkrnSFUn8XEx+N0uGnrsBNxunKf6kPwp2fz2h8uo
      qeti5sxc7l07kxkZ+hH97hMCcIry+i4yslL4ybeWMjNZQU2Hlf/dfIycghwevH7aiPMJBkO4
      nE5azW70akXkeoxKji8QYnJGAt+5bg45CQONIeB2UdHl5rbVs3n0pplUNveeekLA6w9ic3pP
      Zy4IBIMCta1mdBrFWfMsyEpEKhIRksj49x9ey8++Ppude0pocwiIRWB3eQmFBPQxCtp6+vEF
      AjR124jTqgDISU9AJRWjUckJBYIkxOu5fmkhqwrP1CmCwSAf7KnGmJ5ErNfGho+q+OE3FrNq
      ahIAUqWK//zx9Tx4fSHvbz6B9WyWriAQDIaobu0jNkZJrEZJe48VbyBIY7eNWK2S9z4rITY1
      lX/72iwkUY8WTkpEBCgVUnotDvyBIA7PyCyKCRvgFL0mC//9fwfodwcozEvnmulGYuzdvPTB
      Xk7mJo04n32Hyvl0VwlzrprMvGw9Nac69MVF+eyv6uHp13ei12l49DsrTj0hsGl7Mc++2Y9K
      o+J7N8wDmYKpqWp+8tw/mRSvIibZOJA04OH+Z94FmYJ/+85yphikZ8lzAIfVztP/d5guq5er
      puWQohGxYHoW6985RmVTL+vXXcXh2r1841fvMDUvgx/OSWf79s7I8/qkRO6Yn8Yr7+0nJJby
      tdVzWFBwOv+9B8vYd6icyZOS+dk35iNVyZiRJOeh5z8iN0mNKkFJX6+F/373OH1OP4vmTUF3
      li43NU7O/U+/i0ih4qffWc6UBBkHqvfyzV/9g7zsNO6al0WFws1vNh6hvj6Z4cIX5s3M4f2D
      27n7Pz8iQS1idtb5fy/RRCjE6PHWP/dh0yRx/1fyRj1vr6WPb7ywn78/eSOK8yefYIRMjACj
      SFK8nhilakzyFkllTJ8UH/HCTDA6TIwAE3ypmRgBLjOftdvHuwoXRI5WTo7ui6t0TXiBJjgv
      pvYmDh0ujriB3XYLTt9oBi6cnYDXxYkTZfiDY6OoTIwAE5yXwyXl3HDDDZg6WjhWXI5W5sQS
      U0iq1EK/R4ReEaKt00pBQQbdnT3EqJU09QZIiFcQI5Uya968QW7LC2HbJ5uZu3INjn4TlVW1
      5BVOo66ykrikBMwdHYhkCiQKNcZYJV39HrQKsPXbkQUt1PtTuf0rc86Z/8QIMMH5CfpxOV2U
      lJXR01yPTJdARkYGx44dQ6lU0tFtRiHyU9vUyrTsRE5W1FIwez4qn5NOm/uiGz/AV9ZeR9m+
      T/ngvc24JRLKdn+CJnMG9TWlWBwBPC4ndksf+/ftw261UtfUipZ+fLI4cnJyzpv/OY3ggwcP
      UlpaCkBGRgbXXXfdoPsVFRVMmTIFsXiwHD333HPcd999aLVaGhsb2bZtG5mZmaxZs2ZQunfe
      eYeCggJmzJgx4i/k887n0QbIVASpqG0hIyWWXrOLzOwMmhtbSIpT02314e1tZPuxBh74wbeo
      rm0hNyORkEJP+8nduOIKmZUz8nmUobQ21tLWaWJyXi5V1fXkZqVSVd+EzemhMD8fmQQERAg+
      Bxa3CK1GjkEJIl0ydfUtLCw6d9s6pwqUnp5OaWkpjY2NrFy5kmAwSFlZGRkZGYRCIX7+85/z
      +OOPU1RURHV1NTKZjLy8PGpqaggEAoRCIR5//HH+9V//le7ubgRBoKmpCbvdzvTp02lvb8do
      NOLz+aioqKCgoAClUkllZSVyuZzc3FxEognH33gjVaiZOX0KAHHxA9fy83IBiE0AcrOYuWAF
      ANML8yPP5RetuOSyM7LzyMgemFdJTEwmFPDRZ7ayaPF0VLJzjy0J52n8MAIByMnJwe12k5eX
      x5NPPolCoaC0tJSHH34Yl8tFSUkJOp2OrVu3UlxczEMPPRR5XiwWk5uby1//+lfuuOMOPB4P
      f//73zGZTMyaNSuS7rHHHiMjI4NXXnmFr371q/zv//4v06ZN49FHH0Umk533Jcaa3t5e7HY7
      2dnZ412VccPU1Y3BmIzL4UAkQIw2ZlzqIZbKmXHVVaOX34Ukrqqq4ic/+QlTp05FoVCQkJDA
      3Xffjclkoq+vD6VSidlsjqQXBIFf/vKXPPbYY2zYsIHGxkZ6enpQKpX09fUBEAqFqKurIyYm
      BrVazYwZM8jPz+f48eM4HI5Re9GhWCwWli1bxt13383TTz/N2TRBv9/PAw88QG1tLc888wy9
      vb0899xz2O1jp8oIgsCmP/+e//m3f+HF/+9BbH29538ois1vvITdYqanrYXNb7yEubuLT996
      /ZLq1FxXTE1TLzV1ddTV1F1SXhdKxYljHC+t5FhJCY3HSugfxbwvyAt08803c++996LX65k6
      dSq5ubn86Ec/4pZbbqGuru6M3loQBB555BECgQC5ublIpVIaGxtJSUkhMXEgVl4sFrN69Wr2
      79+P0Wjk5MmTNDc3o1KpkEguxXw6P5MmTeK1117jlltuobi4mOLiYqxWK2vXruWPf/wjq1at
      wufz0dPTQ1NTEwqFgpqaGjZu3Eh5eTkvvPACWq121OvV09ZMe30ND/z3Hzj0yUYObP4QhVJF
      4cIlVBzcS+HCJRzfsYXW6koWXnczcpWKo59tJuD3sfTm2zm8dRMNZSXc+P0fI5XL2fvh3zmx
      ZzsA/aZubr7vX9n29pssvfl2YmLjzlufgLObll4BbaAKQ+zl7/mbW1rwilRkpBtHPe/zCsA1
      11zDNddcA8C6detYt25d5N6vf/3ryN9f/epXBz0T5sUXXxyU33vvvXdGGUuWLBn0ee3ateer
      1qjQ1NTEPffcw/Lly3G5XGzevJknnniC3/3udzz22GM88cQTbNiwgc2bN3Pfffdx//33c++9
      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
      RU5ErkJggg==
    </thumbnail>
  </thumbnails>
</workbook>
